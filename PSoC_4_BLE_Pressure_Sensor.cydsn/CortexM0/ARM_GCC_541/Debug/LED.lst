ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccPVWPVr.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"LED.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.LED_SetDriveMode,"ax",%progbits
  20              		.align	2
  21              		.global	LED_SetDriveMode
  22              		.code	16
  23              		.thumb_func
  24              		.type	LED_SetDriveMode, %function
  25              	LED_SetDriveMode:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC4\\LED.c"
   1:Generated_Source\PSoC4/LED.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/LED.c **** * File Name: LED.c  
   3:Generated_Source\PSoC4/LED.c **** * Version 2.20
   4:Generated_Source\PSoC4/LED.c **** *
   5:Generated_Source\PSoC4/LED.c **** * Description:
   6:Generated_Source\PSoC4/LED.c **** *  This file contains API to enable firmware control of a Pins component.
   7:Generated_Source\PSoC4/LED.c **** *
   8:Generated_Source\PSoC4/LED.c **** ********************************************************************************
   9:Generated_Source\PSoC4/LED.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  10:Generated_Source\PSoC4/LED.c **** * You may use this file only in accordance with the license, terms, conditions, 
  11:Generated_Source\PSoC4/LED.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  12:Generated_Source\PSoC4/LED.c **** * the software package with which this file was provided.
  13:Generated_Source\PSoC4/LED.c **** *******************************************************************************/
  14:Generated_Source\PSoC4/LED.c **** 
  15:Generated_Source\PSoC4/LED.c **** #include "cytypes.h"
  16:Generated_Source\PSoC4/LED.c **** #include "LED.h"
  17:Generated_Source\PSoC4/LED.c **** 
  18:Generated_Source\PSoC4/LED.c **** 
  19:Generated_Source\PSoC4/LED.c **** #if defined(LED__PC)
  20:Generated_Source\PSoC4/LED.c ****     #define LED_SetP4PinDriveMode(shift, mode)  \
  21:Generated_Source\PSoC4/LED.c ****     do { \
  22:Generated_Source\PSoC4/LED.c ****         LED_PC =   (LED_PC & \
  23:Generated_Source\PSoC4/LED.c ****                                 (uint32)(~(uint32)(LED_DRIVE_MODE_IND_MASK << \
  24:Generated_Source\PSoC4/LED.c ****                                 (LED_DRIVE_MODE_BITS * (shift))))) | \
  25:Generated_Source\PSoC4/LED.c ****                                 (uint32)((uint32)(mode) << \
  26:Generated_Source\PSoC4/LED.c ****                                 (LED_DRIVE_MODE_BITS * (shift))); \
  27:Generated_Source\PSoC4/LED.c ****     } while (0)
  28:Generated_Source\PSoC4/LED.c **** #else
  29:Generated_Source\PSoC4/LED.c ****     #if (CY_PSOC4_4200L)
  30:Generated_Source\PSoC4/LED.c ****         #define LED_SetP4PinDriveMode(shift, mode)  \
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccPVWPVr.s 			page 2


  31:Generated_Source\PSoC4/LED.c ****         do { \
  32:Generated_Source\PSoC4/LED.c ****             LED_USBIO_CTRL_REG = (LED_USBIO_CTRL_REG & \
  33:Generated_Source\PSoC4/LED.c ****                                     (uint32)(~(uint32)(LED_DRIVE_MODE_IND_MASK << \
  34:Generated_Source\PSoC4/LED.c ****                                     (LED_DRIVE_MODE_BITS * (shift))))) | \
  35:Generated_Source\PSoC4/LED.c ****                                     (uint32)((uint32)(mode) << \
  36:Generated_Source\PSoC4/LED.c ****                                     (LED_DRIVE_MODE_BITS * (shift))); \
  37:Generated_Source\PSoC4/LED.c ****         } while (0)
  38:Generated_Source\PSoC4/LED.c ****     #endif
  39:Generated_Source\PSoC4/LED.c **** #endif
  40:Generated_Source\PSoC4/LED.c ****   
  41:Generated_Source\PSoC4/LED.c **** 
  42:Generated_Source\PSoC4/LED.c **** #if defined(LED__PC) || (CY_PSOC4_4200L) 
  43:Generated_Source\PSoC4/LED.c ****     /*******************************************************************************
  44:Generated_Source\PSoC4/LED.c ****     * Function Name: LED_SetDriveMode
  45:Generated_Source\PSoC4/LED.c ****     ****************************************************************************//**
  46:Generated_Source\PSoC4/LED.c ****     *
  47:Generated_Source\PSoC4/LED.c ****     * \brief Sets the drive mode for each of the Pins component's pins.
  48:Generated_Source\PSoC4/LED.c ****     * 
  49:Generated_Source\PSoC4/LED.c ****     * <b>Note</b> This affects all pins in the Pins component instance. Use the
  50:Generated_Source\PSoC4/LED.c ****     * Per-Pin APIs if you wish to control individual pin's drive modes.
  51:Generated_Source\PSoC4/LED.c ****     *
  52:Generated_Source\PSoC4/LED.c ****     * <b>Note</b> USBIOs have limited drive functionality. Refer to the Drive Mode
  53:Generated_Source\PSoC4/LED.c ****     * parameter for more information.
  54:Generated_Source\PSoC4/LED.c ****     *
  55:Generated_Source\PSoC4/LED.c ****     * \param mode
  56:Generated_Source\PSoC4/LED.c ****     *  Mode for the selected signals. Valid options are documented in 
  57:Generated_Source\PSoC4/LED.c ****     *  \ref driveMode.
  58:Generated_Source\PSoC4/LED.c ****     *
  59:Generated_Source\PSoC4/LED.c ****     * \return
  60:Generated_Source\PSoC4/LED.c ****     *  None
  61:Generated_Source\PSoC4/LED.c ****     *
  62:Generated_Source\PSoC4/LED.c ****     * \sideeffect
  63:Generated_Source\PSoC4/LED.c ****     *  If you use read-modify-write operations that are not atomic, the ISR can
  64:Generated_Source\PSoC4/LED.c ****     *  cause corruption of this function. An ISR that interrupts this function 
  65:Generated_Source\PSoC4/LED.c ****     *  and performs writes to the Pins component Drive Mode registers can cause 
  66:Generated_Source\PSoC4/LED.c ****     *  corrupted port data. To avoid this issue, you should either use the Per-Pin
  67:Generated_Source\PSoC4/LED.c ****     *  APIs (primary method) or disable interrupts around this function.
  68:Generated_Source\PSoC4/LED.c ****     *
  69:Generated_Source\PSoC4/LED.c ****     * \funcusage
  70:Generated_Source\PSoC4/LED.c ****     *  \snippet LED_SUT.c usage_LED_SetDriveMode
  71:Generated_Source\PSoC4/LED.c ****     *******************************************************************************/
  72:Generated_Source\PSoC4/LED.c ****     void LED_SetDriveMode(uint8 mode)
  73:Generated_Source\PSoC4/LED.c ****     {
  28              		.loc 1 73 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 82B0     		sub	sp, sp, #8
  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40 0006 0200     		movs	r2, r0
  41 0008 FB1D     		adds	r3, r7, #7
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccPVWPVr.s 			page 3


  42 000a 1A70     		strb	r2, [r3]
  74:Generated_Source\PSoC4/LED.c **** 		LED_SetP4PinDriveMode(LED__0__SHIFT, mode);
  43              		.loc 1 74 0
  44 000c 064B     		ldr	r3, .L2
  45 000e 064A     		ldr	r2, .L2
  46 0010 1268     		ldr	r2, [r2]
  47 0012 0649     		ldr	r1, .L2+4
  48 0014 1140     		ands	r1, r2
  49 0016 FA1D     		adds	r2, r7, #7
  50 0018 1278     		ldrb	r2, [r2]
  51 001a 9204     		lsls	r2, r2, #18
  52 001c 0A43     		orrs	r2, r1
  53 001e 1A60     		str	r2, [r3]
  75:Generated_Source\PSoC4/LED.c ****     }
  54              		.loc 1 75 0
  55 0020 C046     		nop
  56 0022 BD46     		mov	sp, r7
  57 0024 02B0     		add	sp, sp, #8
  58              		@ sp needed
  59 0026 80BD     		pop	{r7, pc}
  60              	.L3:
  61              		.align	2
  62              	.L2:
  63 0028 08020440 		.word	1074004488
  64 002c FFFFE3FF 		.word	-1835009
  65              		.cfi_endproc
  66              	.LFE0:
  67              		.size	LED_SetDriveMode, .-LED_SetDriveMode
  68              		.section	.text.LED_Write,"ax",%progbits
  69              		.align	2
  70              		.global	LED_Write
  71              		.code	16
  72              		.thumb_func
  73              		.type	LED_Write, %function
  74              	LED_Write:
  75              	.LFB1:
  76:Generated_Source\PSoC4/LED.c **** #endif
  77:Generated_Source\PSoC4/LED.c **** 
  78:Generated_Source\PSoC4/LED.c **** 
  79:Generated_Source\PSoC4/LED.c **** /*******************************************************************************
  80:Generated_Source\PSoC4/LED.c **** * Function Name: LED_Write
  81:Generated_Source\PSoC4/LED.c **** ****************************************************************************//**
  82:Generated_Source\PSoC4/LED.c **** *
  83:Generated_Source\PSoC4/LED.c **** * \brief Writes the value to the physical port (data output register), masking
  84:Generated_Source\PSoC4/LED.c **** *  and shifting the bits appropriately. 
  85:Generated_Source\PSoC4/LED.c **** *
  86:Generated_Source\PSoC4/LED.c **** * The data output register controls the signal applied to the physical pin in 
  87:Generated_Source\PSoC4/LED.c **** * conjunction with the drive mode parameter. This function avoids changing 
  88:Generated_Source\PSoC4/LED.c **** * other bits in the port by using the appropriate method (read-modify-write or
  89:Generated_Source\PSoC4/LED.c **** * bit banding).
  90:Generated_Source\PSoC4/LED.c **** *
  91:Generated_Source\PSoC4/LED.c **** * <b>Note</b> This function should not be used on a hardware digital output pin 
  92:Generated_Source\PSoC4/LED.c **** * as it is driven by the hardware signal attached to it.
  93:Generated_Source\PSoC4/LED.c **** *
  94:Generated_Source\PSoC4/LED.c **** * \param value
  95:Generated_Source\PSoC4/LED.c **** *  Value to write to the component instance.
  96:Generated_Source\PSoC4/LED.c **** *
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccPVWPVr.s 			page 4


  97:Generated_Source\PSoC4/LED.c **** * \return 
  98:Generated_Source\PSoC4/LED.c **** *  None 
  99:Generated_Source\PSoC4/LED.c **** *
 100:Generated_Source\PSoC4/LED.c **** * \sideeffect
 101:Generated_Source\PSoC4/LED.c **** *  If you use read-modify-write operations that are not atomic; the Interrupt 
 102:Generated_Source\PSoC4/LED.c **** *  Service Routines (ISR) can cause corruption of this function. An ISR that 
 103:Generated_Source\PSoC4/LED.c **** *  interrupts this function and performs writes to the Pins component data 
 104:Generated_Source\PSoC4/LED.c **** *  register can cause corrupted port data. To avoid this issue, you should 
 105:Generated_Source\PSoC4/LED.c **** *  either use the Per-Pin APIs (primary method) or disable interrupts around 
 106:Generated_Source\PSoC4/LED.c **** *  this function.
 107:Generated_Source\PSoC4/LED.c **** *
 108:Generated_Source\PSoC4/LED.c **** * \funcusage
 109:Generated_Source\PSoC4/LED.c **** *  \snippet LED_SUT.c usage_LED_Write
 110:Generated_Source\PSoC4/LED.c **** *******************************************************************************/
 111:Generated_Source\PSoC4/LED.c **** void LED_Write(uint8 value)
 112:Generated_Source\PSoC4/LED.c **** {
  76              		.loc 1 112 0
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 16
  79              		@ frame_needed = 1, uses_anonymous_args = 0
  80 0000 80B5     		push	{r7, lr}
  81              		.cfi_def_cfa_offset 8
  82              		.cfi_offset 7, -8
  83              		.cfi_offset 14, -4
  84 0002 84B0     		sub	sp, sp, #16
  85              		.cfi_def_cfa_offset 24
  86 0004 00AF     		add	r7, sp, #0
  87              		.cfi_def_cfa_register 7
  88 0006 0200     		movs	r2, r0
  89 0008 FB1D     		adds	r3, r7, #7
  90 000a 1A70     		strb	r2, [r3]
 113:Generated_Source\PSoC4/LED.c ****     uint8 drVal = (uint8)(LED_DR & (uint8)(~LED_MASK));
  91              		.loc 1 113 0
  92 000c 0F4B     		ldr	r3, .L5
  93 000e 1B68     		ldr	r3, [r3]
  94 0010 DAB2     		uxtb	r2, r3
  95 0012 0F23     		movs	r3, #15
  96 0014 FB18     		adds	r3, r7, r3
  97 0016 4021     		movs	r1, #64
  98 0018 8A43     		bics	r2, r1
  99 001a 1A70     		strb	r2, [r3]
 114:Generated_Source\PSoC4/LED.c ****     drVal = (drVal | ((uint8)(value << LED_SHIFT) & LED_MASK));
 100              		.loc 1 114 0
 101 001c FB1D     		adds	r3, r7, #7
 102 001e 1B78     		ldrb	r3, [r3]
 103 0020 9B01     		lsls	r3, r3, #6
 104 0022 DBB2     		uxtb	r3, r3
 105 0024 4022     		movs	r2, #64
 106 0026 1340     		ands	r3, r2
 107 0028 D9B2     		uxtb	r1, r3
 108 002a 0F23     		movs	r3, #15
 109 002c FB18     		adds	r3, r7, r3
 110 002e 0F22     		movs	r2, #15
 111 0030 BA18     		adds	r2, r7, r2
 112 0032 1278     		ldrb	r2, [r2]
 113 0034 0A43     		orrs	r2, r1
 114 0036 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccPVWPVr.s 			page 5


 115:Generated_Source\PSoC4/LED.c ****     LED_DR = (uint32)drVal;
 115              		.loc 1 115 0
 116 0038 044B     		ldr	r3, .L5
 117 003a 0F22     		movs	r2, #15
 118 003c BA18     		adds	r2, r7, r2
 119 003e 1278     		ldrb	r2, [r2]
 120 0040 1A60     		str	r2, [r3]
 116:Generated_Source\PSoC4/LED.c **** }
 121              		.loc 1 116 0
 122 0042 C046     		nop
 123 0044 BD46     		mov	sp, r7
 124 0046 04B0     		add	sp, sp, #16
 125              		@ sp needed
 126 0048 80BD     		pop	{r7, pc}
 127              	.L6:
 128 004a C046     		.align	2
 129              	.L5:
 130 004c 00020440 		.word	1074004480
 131              		.cfi_endproc
 132              	.LFE1:
 133              		.size	LED_Write, .-LED_Write
 134              		.section	.text.LED_Read,"ax",%progbits
 135              		.align	2
 136              		.global	LED_Read
 137              		.code	16
 138              		.thumb_func
 139              		.type	LED_Read, %function
 140              	LED_Read:
 141              	.LFB2:
 117:Generated_Source\PSoC4/LED.c **** 
 118:Generated_Source\PSoC4/LED.c **** 
 119:Generated_Source\PSoC4/LED.c **** /*******************************************************************************
 120:Generated_Source\PSoC4/LED.c **** * Function Name: LED_Read
 121:Generated_Source\PSoC4/LED.c **** ****************************************************************************//**
 122:Generated_Source\PSoC4/LED.c **** *
 123:Generated_Source\PSoC4/LED.c **** * \brief Reads the associated physical port (pin status register) and masks 
 124:Generated_Source\PSoC4/LED.c **** *  the required bits according to the width and bit position of the component
 125:Generated_Source\PSoC4/LED.c **** *  instance. 
 126:Generated_Source\PSoC4/LED.c **** *
 127:Generated_Source\PSoC4/LED.c **** * The pin's status register returns the current logic level present on the 
 128:Generated_Source\PSoC4/LED.c **** * physical pin.
 129:Generated_Source\PSoC4/LED.c **** *
 130:Generated_Source\PSoC4/LED.c **** * \return 
 131:Generated_Source\PSoC4/LED.c **** *  The current value for the pins in the component as a right justified number.
 132:Generated_Source\PSoC4/LED.c **** *
 133:Generated_Source\PSoC4/LED.c **** * \funcusage
 134:Generated_Source\PSoC4/LED.c **** *  \snippet LED_SUT.c usage_LED_Read  
 135:Generated_Source\PSoC4/LED.c **** *******************************************************************************/
 136:Generated_Source\PSoC4/LED.c **** uint8 LED_Read(void)
 137:Generated_Source\PSoC4/LED.c **** {
 142              		.loc 1 137 0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 0
 145              		@ frame_needed = 1, uses_anonymous_args = 0
 146 0000 80B5     		push	{r7, lr}
 147              		.cfi_def_cfa_offset 8
 148              		.cfi_offset 7, -8
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccPVWPVr.s 			page 6


 149              		.cfi_offset 14, -4
 150 0002 00AF     		add	r7, sp, #0
 151              		.cfi_def_cfa_register 7
 138:Generated_Source\PSoC4/LED.c ****     return (uint8)((LED_PS & LED_MASK) >> LED_SHIFT);
 152              		.loc 1 138 0
 153 0004 044B     		ldr	r3, .L9
 154 0006 1B68     		ldr	r3, [r3]
 155 0008 4022     		movs	r2, #64
 156 000a 1340     		ands	r3, r2
 157 000c 9B09     		lsrs	r3, r3, #6
 158 000e DBB2     		uxtb	r3, r3
 139:Generated_Source\PSoC4/LED.c **** }
 159              		.loc 1 139 0
 160 0010 1800     		movs	r0, r3
 161 0012 BD46     		mov	sp, r7
 162              		@ sp needed
 163 0014 80BD     		pop	{r7, pc}
 164              	.L10:
 165 0016 C046     		.align	2
 166              	.L9:
 167 0018 04020440 		.word	1074004484
 168              		.cfi_endproc
 169              	.LFE2:
 170              		.size	LED_Read, .-LED_Read
 171              		.section	.text.LED_ReadDataReg,"ax",%progbits
 172              		.align	2
 173              		.global	LED_ReadDataReg
 174              		.code	16
 175              		.thumb_func
 176              		.type	LED_ReadDataReg, %function
 177              	LED_ReadDataReg:
 178              	.LFB3:
 140:Generated_Source\PSoC4/LED.c **** 
 141:Generated_Source\PSoC4/LED.c **** 
 142:Generated_Source\PSoC4/LED.c **** /*******************************************************************************
 143:Generated_Source\PSoC4/LED.c **** * Function Name: LED_ReadDataReg
 144:Generated_Source\PSoC4/LED.c **** ****************************************************************************//**
 145:Generated_Source\PSoC4/LED.c **** *
 146:Generated_Source\PSoC4/LED.c **** * \brief Reads the associated physical port's data output register and masks 
 147:Generated_Source\PSoC4/LED.c **** *  the correct bits according to the width and bit position of the component 
 148:Generated_Source\PSoC4/LED.c **** *  instance. 
 149:Generated_Source\PSoC4/LED.c **** *
 150:Generated_Source\PSoC4/LED.c **** * The data output register controls the signal applied to the physical pin in 
 151:Generated_Source\PSoC4/LED.c **** * conjunction with the drive mode parameter. This is not the same as the 
 152:Generated_Source\PSoC4/LED.c **** * preferred LED_Read() API because the 
 153:Generated_Source\PSoC4/LED.c **** * LED_ReadDataReg() reads the data register instead of the status 
 154:Generated_Source\PSoC4/LED.c **** * register. For output pins this is a useful function to determine the value 
 155:Generated_Source\PSoC4/LED.c **** * just written to the pin.
 156:Generated_Source\PSoC4/LED.c **** *
 157:Generated_Source\PSoC4/LED.c **** * \return 
 158:Generated_Source\PSoC4/LED.c **** *  The current value of the data register masked and shifted into a right 
 159:Generated_Source\PSoC4/LED.c **** *  justified number for the component instance.
 160:Generated_Source\PSoC4/LED.c **** *
 161:Generated_Source\PSoC4/LED.c **** * \funcusage
 162:Generated_Source\PSoC4/LED.c **** *  \snippet LED_SUT.c usage_LED_ReadDataReg 
 163:Generated_Source\PSoC4/LED.c **** *******************************************************************************/
 164:Generated_Source\PSoC4/LED.c **** uint8 LED_ReadDataReg(void)
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccPVWPVr.s 			page 7


 165:Generated_Source\PSoC4/LED.c **** {
 179              		.loc 1 165 0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 1, uses_anonymous_args = 0
 183 0000 80B5     		push	{r7, lr}
 184              		.cfi_def_cfa_offset 8
 185              		.cfi_offset 7, -8
 186              		.cfi_offset 14, -4
 187 0002 00AF     		add	r7, sp, #0
 188              		.cfi_def_cfa_register 7
 166:Generated_Source\PSoC4/LED.c ****     return (uint8)((LED_DR & LED_MASK) >> LED_SHIFT);
 189              		.loc 1 166 0
 190 0004 044B     		ldr	r3, .L13
 191 0006 1B68     		ldr	r3, [r3]
 192 0008 4022     		movs	r2, #64
 193 000a 1340     		ands	r3, r2
 194 000c 9B09     		lsrs	r3, r3, #6
 195 000e DBB2     		uxtb	r3, r3
 167:Generated_Source\PSoC4/LED.c **** }
 196              		.loc 1 167 0
 197 0010 1800     		movs	r0, r3
 198 0012 BD46     		mov	sp, r7
 199              		@ sp needed
 200 0014 80BD     		pop	{r7, pc}
 201              	.L14:
 202 0016 C046     		.align	2
 203              	.L13:
 204 0018 00020440 		.word	1074004480
 205              		.cfi_endproc
 206              	.LFE3:
 207              		.size	LED_ReadDataReg, .-LED_ReadDataReg
 208              		.section	.text.LED_SetInterruptMode,"ax",%progbits
 209              		.align	2
 210              		.global	LED_SetInterruptMode
 211              		.code	16
 212              		.thumb_func
 213              		.type	LED_SetInterruptMode, %function
 214              	LED_SetInterruptMode:
 215              	.LFB4:
 168:Generated_Source\PSoC4/LED.c **** 
 169:Generated_Source\PSoC4/LED.c **** 
 170:Generated_Source\PSoC4/LED.c **** /*******************************************************************************
 171:Generated_Source\PSoC4/LED.c **** * Function Name: LED_SetInterruptMode
 172:Generated_Source\PSoC4/LED.c **** ****************************************************************************//**
 173:Generated_Source\PSoC4/LED.c **** *
 174:Generated_Source\PSoC4/LED.c **** * \brief Configures the interrupt mode for each of the Pins component's
 175:Generated_Source\PSoC4/LED.c **** *  pins. Alternatively you may set the interrupt mode for all the pins
 176:Generated_Source\PSoC4/LED.c **** *  specified in the Pins component.
 177:Generated_Source\PSoC4/LED.c **** *
 178:Generated_Source\PSoC4/LED.c **** *  <b>Note</b> The interrupt is port-wide and therefore any enabled pin
 179:Generated_Source\PSoC4/LED.c **** *  interrupt may trigger it.
 180:Generated_Source\PSoC4/LED.c **** *
 181:Generated_Source\PSoC4/LED.c **** * \param position
 182:Generated_Source\PSoC4/LED.c **** *  The pin position as listed in the Pins component. You may OR these to be 
 183:Generated_Source\PSoC4/LED.c **** *  able to configure the interrupt mode of multiple pins within a Pins 
 184:Generated_Source\PSoC4/LED.c **** *  component. Or you may use LED_INTR_ALL to configure the
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccPVWPVr.s 			page 8


 185:Generated_Source\PSoC4/LED.c **** *  interrupt mode of all the pins in the Pins component.       
 186:Generated_Source\PSoC4/LED.c **** *  - LED_0_INTR       (First pin in the list)
 187:Generated_Source\PSoC4/LED.c **** *  - LED_1_INTR       (Second pin in the list)
 188:Generated_Source\PSoC4/LED.c **** *  - ...
 189:Generated_Source\PSoC4/LED.c **** *  - LED_INTR_ALL     (All pins in Pins component)
 190:Generated_Source\PSoC4/LED.c **** *
 191:Generated_Source\PSoC4/LED.c **** * \param mode
 192:Generated_Source\PSoC4/LED.c **** *  Interrupt mode for the selected pins. Valid options are documented in
 193:Generated_Source\PSoC4/LED.c **** *  \ref intrMode.
 194:Generated_Source\PSoC4/LED.c **** *
 195:Generated_Source\PSoC4/LED.c **** * \return 
 196:Generated_Source\PSoC4/LED.c **** *  None
 197:Generated_Source\PSoC4/LED.c **** *  
 198:Generated_Source\PSoC4/LED.c **** * \sideeffect
 199:Generated_Source\PSoC4/LED.c **** *  It is recommended that the interrupt be disabled before calling this 
 200:Generated_Source\PSoC4/LED.c **** *  function to avoid unintended interrupt requests. Note that the interrupt
 201:Generated_Source\PSoC4/LED.c **** *  type is port wide, and therefore will trigger for any enabled pin on the 
 202:Generated_Source\PSoC4/LED.c **** *  port.
 203:Generated_Source\PSoC4/LED.c **** *
 204:Generated_Source\PSoC4/LED.c **** * \funcusage
 205:Generated_Source\PSoC4/LED.c **** *  \snippet LED_SUT.c usage_LED_SetInterruptMode
 206:Generated_Source\PSoC4/LED.c **** *******************************************************************************/
 207:Generated_Source\PSoC4/LED.c **** void LED_SetInterruptMode(uint16 position, uint16 mode)
 208:Generated_Source\PSoC4/LED.c **** {
 216              		.loc 1 208 0
 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 16
 219              		@ frame_needed = 1, uses_anonymous_args = 0
 220 0000 80B5     		push	{r7, lr}
 221              		.cfi_def_cfa_offset 8
 222              		.cfi_offset 7, -8
 223              		.cfi_offset 14, -4
 224 0002 84B0     		sub	sp, sp, #16
 225              		.cfi_def_cfa_offset 24
 226 0004 00AF     		add	r7, sp, #0
 227              		.cfi_def_cfa_register 7
 228 0006 0200     		movs	r2, r0
 229 0008 BB1D     		adds	r3, r7, #6
 230 000a 1A80     		strh	r2, [r3]
 231 000c 3B1D     		adds	r3, r7, #4
 232 000e 0A1C     		adds	r2, r1, #0
 233 0010 1A80     		strh	r2, [r3]
 209:Generated_Source\PSoC4/LED.c ****     uint32 intrCfg;
 210:Generated_Source\PSoC4/LED.c ****     
 211:Generated_Source\PSoC4/LED.c ****     intrCfg =  LED_INTCFG & (uint32)(~(uint32)position);
 234              		.loc 1 211 0
 235 0012 0B4B     		ldr	r3, .L16
 236 0014 1B68     		ldr	r3, [r3]
 237 0016 BA1D     		adds	r2, r7, #6
 238 0018 1288     		ldrh	r2, [r2]
 239 001a D243     		mvns	r2, r2
 240 001c 1340     		ands	r3, r2
 241 001e FB60     		str	r3, [r7, #12]
 212:Generated_Source\PSoC4/LED.c ****     LED_INTCFG = intrCfg | ((uint32)position & (uint32)mode);
 242              		.loc 1 212 0
 243 0020 074B     		ldr	r3, .L16
 244 0022 BA1D     		adds	r2, r7, #6
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccPVWPVr.s 			page 9


 245 0024 391D     		adds	r1, r7, #4
 246 0026 1288     		ldrh	r2, [r2]
 247 0028 0988     		ldrh	r1, [r1]
 248 002a 0A40     		ands	r2, r1
 249 002c 92B2     		uxth	r2, r2
 250 002e 1100     		movs	r1, r2
 251 0030 FA68     		ldr	r2, [r7, #12]
 252 0032 0A43     		orrs	r2, r1
 253 0034 1A60     		str	r2, [r3]
 213:Generated_Source\PSoC4/LED.c **** }
 254              		.loc 1 213 0
 255 0036 C046     		nop
 256 0038 BD46     		mov	sp, r7
 257 003a 04B0     		add	sp, sp, #16
 258              		@ sp needed
 259 003c 80BD     		pop	{r7, pc}
 260              	.L17:
 261 003e C046     		.align	2
 262              	.L16:
 263 0040 0C020440 		.word	1074004492
 264              		.cfi_endproc
 265              	.LFE4:
 266              		.size	LED_SetInterruptMode, .-LED_SetInterruptMode
 267              		.section	.text.LED_ClearInterrupt,"ax",%progbits
 268              		.align	2
 269              		.global	LED_ClearInterrupt
 270              		.code	16
 271              		.thumb_func
 272              		.type	LED_ClearInterrupt, %function
 273              	LED_ClearInterrupt:
 274              	.LFB5:
 214:Generated_Source\PSoC4/LED.c **** 
 215:Generated_Source\PSoC4/LED.c **** 
 216:Generated_Source\PSoC4/LED.c **** /*******************************************************************************
 217:Generated_Source\PSoC4/LED.c **** * Function Name: LED_ClearInterrupt
 218:Generated_Source\PSoC4/LED.c **** ****************************************************************************//**
 219:Generated_Source\PSoC4/LED.c **** *
 220:Generated_Source\PSoC4/LED.c **** * \brief Clears any active interrupts attached with the component and returns 
 221:Generated_Source\PSoC4/LED.c **** *  the value of the interrupt status register allowing determination of which
 222:Generated_Source\PSoC4/LED.c **** *  pins generated an interrupt event.
 223:Generated_Source\PSoC4/LED.c **** *
 224:Generated_Source\PSoC4/LED.c **** * \return 
 225:Generated_Source\PSoC4/LED.c **** *  The right-shifted current value of the interrupt status register. Each pin 
 226:Generated_Source\PSoC4/LED.c **** *  has one bit set if it generated an interrupt event. For example, bit 0 is 
 227:Generated_Source\PSoC4/LED.c **** *  for pin 0 and bit 1 is for pin 1 of the Pins component.
 228:Generated_Source\PSoC4/LED.c **** *  
 229:Generated_Source\PSoC4/LED.c **** * \sideeffect
 230:Generated_Source\PSoC4/LED.c **** *  Clears all bits of the physical port's interrupt status register, not just
 231:Generated_Source\PSoC4/LED.c **** *  those associated with the Pins component.
 232:Generated_Source\PSoC4/LED.c **** *
 233:Generated_Source\PSoC4/LED.c **** * \funcusage
 234:Generated_Source\PSoC4/LED.c **** *  \snippet LED_SUT.c usage_LED_ClearInterrupt
 235:Generated_Source\PSoC4/LED.c **** *******************************************************************************/
 236:Generated_Source\PSoC4/LED.c **** uint8 LED_ClearInterrupt(void)
 237:Generated_Source\PSoC4/LED.c **** {
 275              		.loc 1 237 0
 276              		.cfi_startproc
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccPVWPVr.s 			page 10


 277              		@ args = 0, pretend = 0, frame = 8
 278              		@ frame_needed = 1, uses_anonymous_args = 0
 279 0000 80B5     		push	{r7, lr}
 280              		.cfi_def_cfa_offset 8
 281              		.cfi_offset 7, -8
 282              		.cfi_offset 14, -4
 283 0002 82B0     		sub	sp, sp, #8
 284              		.cfi_def_cfa_offset 16
 285 0004 00AF     		add	r7, sp, #0
 286              		.cfi_def_cfa_register 7
 238:Generated_Source\PSoC4/LED.c **** 	uint8 maskedStatus = (uint8)(LED_INTSTAT & LED_MASK);
 287              		.loc 1 238 0
 288 0006 094B     		ldr	r3, .L20
 289 0008 1B68     		ldr	r3, [r3]
 290 000a DAB2     		uxtb	r2, r3
 291 000c FB1D     		adds	r3, r7, #7
 292 000e 4021     		movs	r1, #64
 293 0010 0A40     		ands	r2, r1
 294 0012 1A70     		strb	r2, [r3]
 239:Generated_Source\PSoC4/LED.c **** 	LED_INTSTAT = maskedStatus;
 295              		.loc 1 239 0
 296 0014 054B     		ldr	r3, .L20
 297 0016 FA1D     		adds	r2, r7, #7
 298 0018 1278     		ldrb	r2, [r2]
 299 001a 1A60     		str	r2, [r3]
 240:Generated_Source\PSoC4/LED.c ****     return maskedStatus >> LED_SHIFT;
 300              		.loc 1 240 0
 301 001c FB1D     		adds	r3, r7, #7
 302 001e 1B78     		ldrb	r3, [r3]
 303 0020 9B09     		lsrs	r3, r3, #6
 304 0022 DBB2     		uxtb	r3, r3
 241:Generated_Source\PSoC4/LED.c **** }
 305              		.loc 1 241 0
 306 0024 1800     		movs	r0, r3
 307 0026 BD46     		mov	sp, r7
 308 0028 02B0     		add	sp, sp, #8
 309              		@ sp needed
 310 002a 80BD     		pop	{r7, pc}
 311              	.L21:
 312              		.align	2
 313              	.L20:
 314 002c 10020440 		.word	1074004496
 315              		.cfi_endproc
 316              	.LFE5:
 317              		.size	LED_ClearInterrupt, .-LED_ClearInterrupt
 318              		.text
 319              	.Letext0:
 320              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 321              		.section	.debug_info,"",%progbits
 322              	.Ldebug_info0:
 323 0000 AC010000 		.4byte	0x1ac
 324 0004 0300     		.2byte	0x3
 325 0006 00000000 		.4byte	.Ldebug_abbrev0
 326 000a 04       		.byte	0x4
 327 000b 01       		.uleb128 0x1
 328 000c 90010000 		.4byte	.LASF28
 329 0010 0C       		.byte	0xc
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccPVWPVr.s 			page 11


 330 0011 28020000 		.4byte	.LASF29
 331 0015 B5000000 		.4byte	.LASF30
 332 0019 00000000 		.4byte	.Ldebug_ranges0+0
 333 001d 00000000 		.4byte	0
 334 0021 00000000 		.4byte	0
 335 0025 00000000 		.4byte	.Ldebug_line0
 336 0029 02       		.uleb128 0x2
 337 002a 01       		.byte	0x1
 338 002b 06       		.byte	0x6
 339 002c 84010000 		.4byte	.LASF0
 340 0030 02       		.uleb128 0x2
 341 0031 01       		.byte	0x1
 342 0032 08       		.byte	0x8
 343 0033 42000000 		.4byte	.LASF1
 344 0037 02       		.uleb128 0x2
 345 0038 02       		.byte	0x2
 346 0039 05       		.byte	0x5
 347 003a 6B010000 		.4byte	.LASF2
 348 003e 02       		.uleb128 0x2
 349 003f 02       		.byte	0x2
 350 0040 07       		.byte	0x7
 351 0041 7B000000 		.4byte	.LASF3
 352 0045 02       		.uleb128 0x2
 353 0046 04       		.byte	0x4
 354 0047 05       		.byte	0x5
 355 0048 7B010000 		.4byte	.LASF4
 356 004c 02       		.uleb128 0x2
 357 004d 04       		.byte	0x4
 358 004e 07       		.byte	0x7
 359 004f 69000000 		.4byte	.LASF5
 360 0053 02       		.uleb128 0x2
 361 0054 08       		.byte	0x8
 362 0055 05       		.byte	0x5
 363 0056 4B010000 		.4byte	.LASF6
 364 005a 02       		.uleb128 0x2
 365 005b 08       		.byte	0x8
 366 005c 07       		.byte	0x7
 367 005d 2F010000 		.4byte	.LASF7
 368 0061 03       		.uleb128 0x3
 369 0062 04       		.byte	0x4
 370 0063 05       		.byte	0x5
 371 0064 696E7400 		.ascii	"int\000"
 372 0068 02       		.uleb128 0x2
 373 0069 04       		.byte	0x4
 374 006a 07       		.byte	0x7
 375 006b 22010000 		.4byte	.LASF8
 376 006f 04       		.uleb128 0x4
 377 0070 75010000 		.4byte	.LASF9
 378 0074 02       		.byte	0x2
 379 0075 D201     		.2byte	0x1d2
 380 0077 30000000 		.4byte	0x30
 381 007b 04       		.uleb128 0x4
 382 007c AE000000 		.4byte	.LASF10
 383 0080 02       		.byte	0x2
 384 0081 D301     		.2byte	0x1d3
 385 0083 3E000000 		.4byte	0x3e
 386 0087 04       		.uleb128 0x4
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccPVWPVr.s 			page 12


 387 0088 13010000 		.4byte	.LASF11
 388 008c 02       		.byte	0x2
 389 008d D401     		.2byte	0x1d4
 390 008f 4C000000 		.4byte	0x4c
 391 0093 02       		.uleb128 0x2
 392 0094 04       		.byte	0x4
 393 0095 04       		.byte	0x4
 394 0096 3C000000 		.4byte	.LASF12
 395 009a 02       		.uleb128 0x2
 396 009b 08       		.byte	0x8
 397 009c 04       		.byte	0x4
 398 009d A7000000 		.4byte	.LASF13
 399 00a1 02       		.uleb128 0x2
 400 00a2 01       		.byte	0x1
 401 00a3 08       		.byte	0x8
 402 00a4 66010000 		.4byte	.LASF14
 403 00a8 04       		.uleb128 0x4
 404 00a9 00000000 		.4byte	.LASF15
 405 00ad 02       		.byte	0x2
 406 00ae 7E02     		.2byte	0x27e
 407 00b0 B4000000 		.4byte	0xb4
 408 00b4 05       		.uleb128 0x5
 409 00b5 87000000 		.4byte	0x87
 410 00b9 06       		.uleb128 0x6
 411 00ba 01       		.byte	0x1
 412 00bb 06000000 		.4byte	.LASF16
 413 00bf 01       		.byte	0x1
 414 00c0 48       		.byte	0x48
 415 00c1 01       		.byte	0x1
 416 00c2 00000000 		.4byte	.LFB0
 417 00c6 30000000 		.4byte	.LFE0
 418 00ca 01       		.byte	0x1
 419 00cb 9C       		.byte	0x9c
 420 00cc 01       		.byte	0x1
 421 00cd E0000000 		.4byte	0xe0
 422 00d1 07       		.uleb128 0x7
 423 00d2 46010000 		.4byte	.LASF18
 424 00d6 01       		.byte	0x1
 425 00d7 48       		.byte	0x48
 426 00d8 6F000000 		.4byte	0x6f
 427 00dc 02       		.byte	0x2
 428 00dd 91       		.byte	0x91
 429 00de 77       		.sleb128 -9
 430 00df 00       		.byte	0
 431 00e0 06       		.uleb128 0x6
 432 00e1 01       		.byte	0x1
 433 00e2 17000000 		.4byte	.LASF17
 434 00e6 01       		.byte	0x1
 435 00e7 6F       		.byte	0x6f
 436 00e8 01       		.byte	0x1
 437 00e9 00000000 		.4byte	.LFB1
 438 00ed 50000000 		.4byte	.LFE1
 439 00f1 01       		.byte	0x1
 440 00f2 9C       		.byte	0x9c
 441 00f3 01       		.byte	0x1
 442 00f4 15010000 		.4byte	0x115
 443 00f8 07       		.uleb128 0x7
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccPVWPVr.s 			page 13


 444 00f9 21000000 		.4byte	.LASF19
 445 00fd 01       		.byte	0x1
 446 00fe 6F       		.byte	0x6f
 447 00ff 6F000000 		.4byte	0x6f
 448 0103 02       		.byte	0x2
 449 0104 91       		.byte	0x91
 450 0105 6F       		.sleb128 -17
 451 0106 08       		.uleb128 0x8
 452 0107 50000000 		.4byte	.LASF24
 453 010b 01       		.byte	0x1
 454 010c 71       		.byte	0x71
 455 010d 6F000000 		.4byte	0x6f
 456 0111 02       		.byte	0x2
 457 0112 91       		.byte	0x91
 458 0113 77       		.sleb128 -9
 459 0114 00       		.byte	0
 460 0115 09       		.uleb128 0x9
 461 0116 01       		.byte	0x1
 462 0117 8E000000 		.4byte	.LASF20
 463 011b 01       		.byte	0x1
 464 011c 88       		.byte	0x88
 465 011d 01       		.byte	0x1
 466 011e 6F000000 		.4byte	0x6f
 467 0122 00000000 		.4byte	.LFB2
 468 0126 1C000000 		.4byte	.LFE2
 469 012a 01       		.byte	0x1
 470 012b 9C       		.byte	0x9c
 471 012c 01       		.byte	0x1
 472 012d 09       		.uleb128 0x9
 473 012e 01       		.byte	0x1
 474 012f 97000000 		.4byte	.LASF21
 475 0133 01       		.byte	0x1
 476 0134 A4       		.byte	0xa4
 477 0135 01       		.byte	0x1
 478 0136 6F000000 		.4byte	0x6f
 479 013a 00000000 		.4byte	.LFB3
 480 013e 1C000000 		.4byte	.LFE3
 481 0142 01       		.byte	0x1
 482 0143 9C       		.byte	0x9c
 483 0144 01       		.byte	0x1
 484 0145 06       		.uleb128 0x6
 485 0146 01       		.byte	0x1
 486 0147 27000000 		.4byte	.LASF22
 487 014b 01       		.byte	0x1
 488 014c CF       		.byte	0xcf
 489 014d 01       		.byte	0x1
 490 014e 00000000 		.4byte	.LFB4
 491 0152 44000000 		.4byte	.LFE4
 492 0156 01       		.byte	0x1
 493 0157 9C       		.byte	0x9c
 494 0158 01       		.byte	0x1
 495 0159 88010000 		.4byte	0x188
 496 015d 07       		.uleb128 0x7
 497 015e 0A010000 		.4byte	.LASF23
 498 0162 01       		.byte	0x1
 499 0163 CF       		.byte	0xcf
 500 0164 7B000000 		.4byte	0x7b
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccPVWPVr.s 			page 14


 501 0168 02       		.byte	0x2
 502 0169 91       		.byte	0x91
 503 016a 6E       		.sleb128 -18
 504 016b 07       		.uleb128 0x7
 505 016c 46010000 		.4byte	.LASF18
 506 0170 01       		.byte	0x1
 507 0171 CF       		.byte	0xcf
 508 0172 7B000000 		.4byte	0x7b
 509 0176 02       		.byte	0x2
 510 0177 91       		.byte	0x91
 511 0178 6C       		.sleb128 -20
 512 0179 08       		.uleb128 0x8
 513 017a 1A010000 		.4byte	.LASF25
 514 017e 01       		.byte	0x1
 515 017f D1       		.byte	0xd1
 516 0180 87000000 		.4byte	0x87
 517 0184 02       		.byte	0x2
 518 0185 91       		.byte	0x91
 519 0186 74       		.sleb128 -12
 520 0187 00       		.byte	0
 521 0188 0A       		.uleb128 0xa
 522 0189 01       		.byte	0x1
 523 018a 56000000 		.4byte	.LASF26
 524 018e 01       		.byte	0x1
 525 018f EC       		.byte	0xec
 526 0190 01       		.byte	0x1
 527 0191 6F000000 		.4byte	0x6f
 528 0195 00000000 		.4byte	.LFB5
 529 0199 30000000 		.4byte	.LFE5
 530 019d 01       		.byte	0x1
 531 019e 9C       		.byte	0x9c
 532 019f 01       		.byte	0x1
 533 01a0 08       		.uleb128 0x8
 534 01a1 59010000 		.4byte	.LASF27
 535 01a5 01       		.byte	0x1
 536 01a6 EE       		.byte	0xee
 537 01a7 6F000000 		.4byte	0x6f
 538 01ab 02       		.byte	0x2
 539 01ac 91       		.byte	0x91
 540 01ad 77       		.sleb128 -9
 541 01ae 00       		.byte	0
 542 01af 00       		.byte	0
 543              		.section	.debug_abbrev,"",%progbits
 544              	.Ldebug_abbrev0:
 545 0000 01       		.uleb128 0x1
 546 0001 11       		.uleb128 0x11
 547 0002 01       		.byte	0x1
 548 0003 25       		.uleb128 0x25
 549 0004 0E       		.uleb128 0xe
 550 0005 13       		.uleb128 0x13
 551 0006 0B       		.uleb128 0xb
 552 0007 03       		.uleb128 0x3
 553 0008 0E       		.uleb128 0xe
 554 0009 1B       		.uleb128 0x1b
 555 000a 0E       		.uleb128 0xe
 556 000b 55       		.uleb128 0x55
 557 000c 06       		.uleb128 0x6
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccPVWPVr.s 			page 15


 558 000d 11       		.uleb128 0x11
 559 000e 01       		.uleb128 0x1
 560 000f 52       		.uleb128 0x52
 561 0010 01       		.uleb128 0x1
 562 0011 10       		.uleb128 0x10
 563 0012 06       		.uleb128 0x6
 564 0013 00       		.byte	0
 565 0014 00       		.byte	0
 566 0015 02       		.uleb128 0x2
 567 0016 24       		.uleb128 0x24
 568 0017 00       		.byte	0
 569 0018 0B       		.uleb128 0xb
 570 0019 0B       		.uleb128 0xb
 571 001a 3E       		.uleb128 0x3e
 572 001b 0B       		.uleb128 0xb
 573 001c 03       		.uleb128 0x3
 574 001d 0E       		.uleb128 0xe
 575 001e 00       		.byte	0
 576 001f 00       		.byte	0
 577 0020 03       		.uleb128 0x3
 578 0021 24       		.uleb128 0x24
 579 0022 00       		.byte	0
 580 0023 0B       		.uleb128 0xb
 581 0024 0B       		.uleb128 0xb
 582 0025 3E       		.uleb128 0x3e
 583 0026 0B       		.uleb128 0xb
 584 0027 03       		.uleb128 0x3
 585 0028 08       		.uleb128 0x8
 586 0029 00       		.byte	0
 587 002a 00       		.byte	0
 588 002b 04       		.uleb128 0x4
 589 002c 16       		.uleb128 0x16
 590 002d 00       		.byte	0
 591 002e 03       		.uleb128 0x3
 592 002f 0E       		.uleb128 0xe
 593 0030 3A       		.uleb128 0x3a
 594 0031 0B       		.uleb128 0xb
 595 0032 3B       		.uleb128 0x3b
 596 0033 05       		.uleb128 0x5
 597 0034 49       		.uleb128 0x49
 598 0035 13       		.uleb128 0x13
 599 0036 00       		.byte	0
 600 0037 00       		.byte	0
 601 0038 05       		.uleb128 0x5
 602 0039 35       		.uleb128 0x35
 603 003a 00       		.byte	0
 604 003b 49       		.uleb128 0x49
 605 003c 13       		.uleb128 0x13
 606 003d 00       		.byte	0
 607 003e 00       		.byte	0
 608 003f 06       		.uleb128 0x6
 609 0040 2E       		.uleb128 0x2e
 610 0041 01       		.byte	0x1
 611 0042 3F       		.uleb128 0x3f
 612 0043 0C       		.uleb128 0xc
 613 0044 03       		.uleb128 0x3
 614 0045 0E       		.uleb128 0xe
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccPVWPVr.s 			page 16


 615 0046 3A       		.uleb128 0x3a
 616 0047 0B       		.uleb128 0xb
 617 0048 3B       		.uleb128 0x3b
 618 0049 0B       		.uleb128 0xb
 619 004a 27       		.uleb128 0x27
 620 004b 0C       		.uleb128 0xc
 621 004c 11       		.uleb128 0x11
 622 004d 01       		.uleb128 0x1
 623 004e 12       		.uleb128 0x12
 624 004f 01       		.uleb128 0x1
 625 0050 40       		.uleb128 0x40
 626 0051 0A       		.uleb128 0xa
 627 0052 9742     		.uleb128 0x2117
 628 0054 0C       		.uleb128 0xc
 629 0055 01       		.uleb128 0x1
 630 0056 13       		.uleb128 0x13
 631 0057 00       		.byte	0
 632 0058 00       		.byte	0
 633 0059 07       		.uleb128 0x7
 634 005a 05       		.uleb128 0x5
 635 005b 00       		.byte	0
 636 005c 03       		.uleb128 0x3
 637 005d 0E       		.uleb128 0xe
 638 005e 3A       		.uleb128 0x3a
 639 005f 0B       		.uleb128 0xb
 640 0060 3B       		.uleb128 0x3b
 641 0061 0B       		.uleb128 0xb
 642 0062 49       		.uleb128 0x49
 643 0063 13       		.uleb128 0x13
 644 0064 02       		.uleb128 0x2
 645 0065 0A       		.uleb128 0xa
 646 0066 00       		.byte	0
 647 0067 00       		.byte	0
 648 0068 08       		.uleb128 0x8
 649 0069 34       		.uleb128 0x34
 650 006a 00       		.byte	0
 651 006b 03       		.uleb128 0x3
 652 006c 0E       		.uleb128 0xe
 653 006d 3A       		.uleb128 0x3a
 654 006e 0B       		.uleb128 0xb
 655 006f 3B       		.uleb128 0x3b
 656 0070 0B       		.uleb128 0xb
 657 0071 49       		.uleb128 0x49
 658 0072 13       		.uleb128 0x13
 659 0073 02       		.uleb128 0x2
 660 0074 0A       		.uleb128 0xa
 661 0075 00       		.byte	0
 662 0076 00       		.byte	0
 663 0077 09       		.uleb128 0x9
 664 0078 2E       		.uleb128 0x2e
 665 0079 00       		.byte	0
 666 007a 3F       		.uleb128 0x3f
 667 007b 0C       		.uleb128 0xc
 668 007c 03       		.uleb128 0x3
 669 007d 0E       		.uleb128 0xe
 670 007e 3A       		.uleb128 0x3a
 671 007f 0B       		.uleb128 0xb
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccPVWPVr.s 			page 17


 672 0080 3B       		.uleb128 0x3b
 673 0081 0B       		.uleb128 0xb
 674 0082 27       		.uleb128 0x27
 675 0083 0C       		.uleb128 0xc
 676 0084 49       		.uleb128 0x49
 677 0085 13       		.uleb128 0x13
 678 0086 11       		.uleb128 0x11
 679 0087 01       		.uleb128 0x1
 680 0088 12       		.uleb128 0x12
 681 0089 01       		.uleb128 0x1
 682 008a 40       		.uleb128 0x40
 683 008b 0A       		.uleb128 0xa
 684 008c 9742     		.uleb128 0x2117
 685 008e 0C       		.uleb128 0xc
 686 008f 00       		.byte	0
 687 0090 00       		.byte	0
 688 0091 0A       		.uleb128 0xa
 689 0092 2E       		.uleb128 0x2e
 690 0093 01       		.byte	0x1
 691 0094 3F       		.uleb128 0x3f
 692 0095 0C       		.uleb128 0xc
 693 0096 03       		.uleb128 0x3
 694 0097 0E       		.uleb128 0xe
 695 0098 3A       		.uleb128 0x3a
 696 0099 0B       		.uleb128 0xb
 697 009a 3B       		.uleb128 0x3b
 698 009b 0B       		.uleb128 0xb
 699 009c 27       		.uleb128 0x27
 700 009d 0C       		.uleb128 0xc
 701 009e 49       		.uleb128 0x49
 702 009f 13       		.uleb128 0x13
 703 00a0 11       		.uleb128 0x11
 704 00a1 01       		.uleb128 0x1
 705 00a2 12       		.uleb128 0x12
 706 00a3 01       		.uleb128 0x1
 707 00a4 40       		.uleb128 0x40
 708 00a5 0A       		.uleb128 0xa
 709 00a6 9742     		.uleb128 0x2117
 710 00a8 0C       		.uleb128 0xc
 711 00a9 00       		.byte	0
 712 00aa 00       		.byte	0
 713 00ab 00       		.byte	0
 714              		.section	.debug_aranges,"",%progbits
 715 0000 44000000 		.4byte	0x44
 716 0004 0200     		.2byte	0x2
 717 0006 00000000 		.4byte	.Ldebug_info0
 718 000a 04       		.byte	0x4
 719 000b 00       		.byte	0
 720 000c 0000     		.2byte	0
 721 000e 0000     		.2byte	0
 722 0010 00000000 		.4byte	.LFB0
 723 0014 30000000 		.4byte	.LFE0-.LFB0
 724 0018 00000000 		.4byte	.LFB1
 725 001c 50000000 		.4byte	.LFE1-.LFB1
 726 0020 00000000 		.4byte	.LFB2
 727 0024 1C000000 		.4byte	.LFE2-.LFB2
 728 0028 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccPVWPVr.s 			page 18


 729 002c 1C000000 		.4byte	.LFE3-.LFB3
 730 0030 00000000 		.4byte	.LFB4
 731 0034 44000000 		.4byte	.LFE4-.LFB4
 732 0038 00000000 		.4byte	.LFB5
 733 003c 30000000 		.4byte	.LFE5-.LFB5
 734 0040 00000000 		.4byte	0
 735 0044 00000000 		.4byte	0
 736              		.section	.debug_ranges,"",%progbits
 737              	.Ldebug_ranges0:
 738 0000 00000000 		.4byte	.LFB0
 739 0004 30000000 		.4byte	.LFE0
 740 0008 00000000 		.4byte	.LFB1
 741 000c 50000000 		.4byte	.LFE1
 742 0010 00000000 		.4byte	.LFB2
 743 0014 1C000000 		.4byte	.LFE2
 744 0018 00000000 		.4byte	.LFB3
 745 001c 1C000000 		.4byte	.LFE3
 746 0020 00000000 		.4byte	.LFB4
 747 0024 44000000 		.4byte	.LFE4
 748 0028 00000000 		.4byte	.LFB5
 749 002c 30000000 		.4byte	.LFE5
 750 0030 00000000 		.4byte	0
 751 0034 00000000 		.4byte	0
 752              		.section	.debug_line,"",%progbits
 753              	.Ldebug_line0:
 754 0000 B7000000 		.section	.debug_str,"MS",%progbits,1
 754      02004000 
 754      00000201 
 754      FB0E0D00 
 754      01010101 
 755              	.LASF15:
 756 0000 72656733 		.ascii	"reg32\000"
 756      3200
 757              	.LASF16:
 758 0006 4C45445F 		.ascii	"LED_SetDriveMode\000"
 758      53657444 
 758      72697665 
 758      4D6F6465 
 758      00
 759              	.LASF17:
 760 0017 4C45445F 		.ascii	"LED_Write\000"
 760      57726974 
 760      6500
 761              	.LASF19:
 762 0021 76616C75 		.ascii	"value\000"
 762      6500
 763              	.LASF22:
 764 0027 4C45445F 		.ascii	"LED_SetInterruptMode\000"
 764      53657449 
 764      6E746572 
 764      72757074 
 764      4D6F6465 
 765              	.LASF12:
 766 003c 666C6F61 		.ascii	"float\000"
 766      7400
 767              	.LASF1:
 768 0042 756E7369 		.ascii	"unsigned char\000"
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccPVWPVr.s 			page 19


 768      676E6564 
 768      20636861 
 768      7200
 769              	.LASF24:
 770 0050 64725661 		.ascii	"drVal\000"
 770      6C00
 771              	.LASF26:
 772 0056 4C45445F 		.ascii	"LED_ClearInterrupt\000"
 772      436C6561 
 772      72496E74 
 772      65727275 
 772      707400
 773              	.LASF5:
 774 0069 6C6F6E67 		.ascii	"long unsigned int\000"
 774      20756E73 
 774      69676E65 
 774      6420696E 
 774      7400
 775              	.LASF3:
 776 007b 73686F72 		.ascii	"short unsigned int\000"
 776      7420756E 
 776      7369676E 
 776      65642069 
 776      6E7400
 777              	.LASF20:
 778 008e 4C45445F 		.ascii	"LED_Read\000"
 778      52656164 
 778      00
 779              	.LASF21:
 780 0097 4C45445F 		.ascii	"LED_ReadDataReg\000"
 780      52656164 
 780      44617461 
 780      52656700 
 781              	.LASF13:
 782 00a7 646F7562 		.ascii	"double\000"
 782      6C6500
 783              	.LASF10:
 784 00ae 75696E74 		.ascii	"uint16\000"
 784      313600
 785              	.LASF30:
 786 00b5 433A5C55 		.ascii	"C:\\Users\\hasur\\Documents\\PSoC_4_BLE_Pressure_Se"
 786      73657273 
 786      5C686173 
 786      75725C44 
 786      6F63756D 
 787 00e4 6E736F72 		.ascii	"nsor\\PSoC_4_BLE_Pressure_Sensor.cydsn\000"
 787      5C50536F 
 787      435F345F 
 787      424C455F 
 787      50726573 
 788              	.LASF23:
 789 010a 706F7369 		.ascii	"position\000"
 789      74696F6E 
 789      00
 790              	.LASF11:
 791 0113 75696E74 		.ascii	"uint32\000"
 791      333200
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccPVWPVr.s 			page 20


 792              	.LASF25:
 793 011a 696E7472 		.ascii	"intrCfg\000"
 793      43666700 
 794              	.LASF8:
 795 0122 756E7369 		.ascii	"unsigned int\000"
 795      676E6564 
 795      20696E74 
 795      00
 796              	.LASF7:
 797 012f 6C6F6E67 		.ascii	"long long unsigned int\000"
 797      206C6F6E 
 797      6720756E 
 797      7369676E 
 797      65642069 
 798              	.LASF18:
 799 0146 6D6F6465 		.ascii	"mode\000"
 799      00
 800              	.LASF6:
 801 014b 6C6F6E67 		.ascii	"long long int\000"
 801      206C6F6E 
 801      6720696E 
 801      7400
 802              	.LASF27:
 803 0159 6D61736B 		.ascii	"maskedStatus\000"
 803      65645374 
 803      61747573 
 803      00
 804              	.LASF14:
 805 0166 63686172 		.ascii	"char\000"
 805      00
 806              	.LASF2:
 807 016b 73686F72 		.ascii	"short int\000"
 807      7420696E 
 807      7400
 808              	.LASF9:
 809 0175 75696E74 		.ascii	"uint8\000"
 809      3800
 810              	.LASF4:
 811 017b 6C6F6E67 		.ascii	"long int\000"
 811      20696E74 
 811      00
 812              	.LASF0:
 813 0184 7369676E 		.ascii	"signed char\000"
 813      65642063 
 813      68617200 
 814              	.LASF28:
 815 0190 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 815      43313120 
 815      352E342E 
 815      31203230 
 815      31363036 
 816 01c3 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -g"
 816      20726576 
 816      6973696F 
 816      6E203233 
 816      37373135 
 817 01f6 64776172 		.ascii	"dwarf-3 -O0 -ffunction-sections -ffat-lto-objects\000"
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccPVWPVr.s 			page 21


 817      662D3320 
 817      2D4F3020 
 817      2D666675 
 817      6E637469 
 818              	.LASF29:
 819 0228 47656E65 		.ascii	"Generated_Source\\PSoC4\\LED.c\000"
 819      72617465 
 819      645F536F 
 819      75726365 
 819      5C50536F 
 820              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
