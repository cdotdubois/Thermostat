ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccVxWlfZ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"BLE_bless_isr.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.BLE_bless_isr_Start,"ax",%progbits
  20              		.align	2
  21              		.global	BLE_bless_isr_Start
  22              		.code	16
  23              		.thumb_func
  24              		.type	BLE_bless_isr_Start, %function
  25              	BLE_bless_isr_Start:
  26              	.LFB2:
  27              		.file 1 "Generated_Source\\PSoC4\\BLE_bless_isr.c"
   1:Generated_Source\PSoC4/BLE_bless_isr.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/BLE_bless_isr.c **** * File Name: BLE_bless_isr.c  
   3:Generated_Source\PSoC4/BLE_bless_isr.c **** * Version 1.70
   4:Generated_Source\PSoC4/BLE_bless_isr.c **** *
   5:Generated_Source\PSoC4/BLE_bless_isr.c **** *  Description:
   6:Generated_Source\PSoC4/BLE_bless_isr.c **** *   API for controlling the state of an interrupt.
   7:Generated_Source\PSoC4/BLE_bless_isr.c **** *
   8:Generated_Source\PSoC4/BLE_bless_isr.c **** *
   9:Generated_Source\PSoC4/BLE_bless_isr.c **** *  Note:
  10:Generated_Source\PSoC4/BLE_bless_isr.c **** *
  11:Generated_Source\PSoC4/BLE_bless_isr.c **** ********************************************************************************
  12:Generated_Source\PSoC4/BLE_bless_isr.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/BLE_bless_isr.c **** * You may use this file only in accordance with the license, terms, conditions, 
  14:Generated_Source\PSoC4/BLE_bless_isr.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  15:Generated_Source\PSoC4/BLE_bless_isr.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/BLE_bless_isr.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/BLE_bless_isr.c **** 
  18:Generated_Source\PSoC4/BLE_bless_isr.c **** 
  19:Generated_Source\PSoC4/BLE_bless_isr.c **** #include <cydevice_trm.h>
  20:Generated_Source\PSoC4/BLE_bless_isr.c **** #include <CyLib.h>
  21:Generated_Source\PSoC4/BLE_bless_isr.c **** #include <BLE_bless_isr.h>
  22:Generated_Source\PSoC4/BLE_bless_isr.c **** 
  23:Generated_Source\PSoC4/BLE_bless_isr.c **** 
  24:Generated_Source\PSoC4/BLE_bless_isr.c **** #if !defined(BLE_bless_isr__REMOVED) /* Check for removal by optimization */
  25:Generated_Source\PSoC4/BLE_bless_isr.c **** 
  26:Generated_Source\PSoC4/BLE_bless_isr.c **** /*******************************************************************************
  27:Generated_Source\PSoC4/BLE_bless_isr.c **** *  Place your includes, defines and code here 
  28:Generated_Source\PSoC4/BLE_bless_isr.c **** ********************************************************************************/
  29:Generated_Source\PSoC4/BLE_bless_isr.c **** /* `#START BLE_bless_isr_intc` */
  30:Generated_Source\PSoC4/BLE_bless_isr.c **** 
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccVxWlfZ.s 			page 2


  31:Generated_Source\PSoC4/BLE_bless_isr.c **** /* `#END` */
  32:Generated_Source\PSoC4/BLE_bless_isr.c **** 
  33:Generated_Source\PSoC4/BLE_bless_isr.c **** extern cyisraddress CyRamVectors[CYINT_IRQ_BASE + CY_NUM_INTERRUPTS];
  34:Generated_Source\PSoC4/BLE_bless_isr.c **** 
  35:Generated_Source\PSoC4/BLE_bless_isr.c **** /* Declared in startup, used to set unused interrupts to. */
  36:Generated_Source\PSoC4/BLE_bless_isr.c **** CY_ISR_PROTO(IntDefaultHandler);
  37:Generated_Source\PSoC4/BLE_bless_isr.c **** 
  38:Generated_Source\PSoC4/BLE_bless_isr.c **** 
  39:Generated_Source\PSoC4/BLE_bless_isr.c **** /*******************************************************************************
  40:Generated_Source\PSoC4/BLE_bless_isr.c **** * Function Name: BLE_bless_isr_Start
  41:Generated_Source\PSoC4/BLE_bless_isr.c **** ********************************************************************************
  42:Generated_Source\PSoC4/BLE_bless_isr.c **** *
  43:Generated_Source\PSoC4/BLE_bless_isr.c **** * Summary:
  44:Generated_Source\PSoC4/BLE_bless_isr.c **** *  Set up the interrupt and enable it. This function disables the interrupt, 
  45:Generated_Source\PSoC4/BLE_bless_isr.c **** *  sets the default interrupt vector, sets the priority from the value in the
  46:Generated_Source\PSoC4/BLE_bless_isr.c **** *  Design Wide Resources Interrupt Editor, then enables the interrupt to the 
  47:Generated_Source\PSoC4/BLE_bless_isr.c **** *  interrupt controller.
  48:Generated_Source\PSoC4/BLE_bless_isr.c **** *
  49:Generated_Source\PSoC4/BLE_bless_isr.c **** * Parameters:  
  50:Generated_Source\PSoC4/BLE_bless_isr.c **** *   None
  51:Generated_Source\PSoC4/BLE_bless_isr.c **** *
  52:Generated_Source\PSoC4/BLE_bless_isr.c **** * Return:
  53:Generated_Source\PSoC4/BLE_bless_isr.c **** *   None
  54:Generated_Source\PSoC4/BLE_bless_isr.c **** *
  55:Generated_Source\PSoC4/BLE_bless_isr.c **** *******************************************************************************/
  56:Generated_Source\PSoC4/BLE_bless_isr.c **** void BLE_bless_isr_Start(void)
  57:Generated_Source\PSoC4/BLE_bless_isr.c **** {
  28              		.loc 1 57 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 00AF     		add	r7, sp, #0
  37              		.cfi_def_cfa_register 7
  58:Generated_Source\PSoC4/BLE_bless_isr.c ****     /* For all we know the interrupt is active. */
  59:Generated_Source\PSoC4/BLE_bless_isr.c ****     BLE_bless_isr_Disable();
  38              		.loc 1 59 0
  39 0004 FFF7FEFF 		bl	BLE_bless_isr_Disable
  60:Generated_Source\PSoC4/BLE_bless_isr.c **** 
  61:Generated_Source\PSoC4/BLE_bless_isr.c ****     /* Set the ISR to point to the BLE_bless_isr Interrupt. */
  62:Generated_Source\PSoC4/BLE_bless_isr.c ****     BLE_bless_isr_SetVector(&BLE_bless_isr_Interrupt);
  40              		.loc 1 62 0
  41 0008 054B     		ldr	r3, .L2
  42 000a 1800     		movs	r0, r3
  43 000c FFF7FEFF 		bl	BLE_bless_isr_SetVector
  63:Generated_Source\PSoC4/BLE_bless_isr.c **** 
  64:Generated_Source\PSoC4/BLE_bless_isr.c ****     /* Set the priority. */
  65:Generated_Source\PSoC4/BLE_bless_isr.c ****     BLE_bless_isr_SetPriority((uint8)BLE_bless_isr_INTC_PRIOR_NUMBER);
  44              		.loc 1 65 0
  45 0010 0320     		movs	r0, #3
  46 0012 FFF7FEFF 		bl	BLE_bless_isr_SetPriority
  66:Generated_Source\PSoC4/BLE_bless_isr.c **** 
  67:Generated_Source\PSoC4/BLE_bless_isr.c ****     /* Enable it. */
  68:Generated_Source\PSoC4/BLE_bless_isr.c ****     BLE_bless_isr_Enable();
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccVxWlfZ.s 			page 3


  47              		.loc 1 68 0
  48 0016 FFF7FEFF 		bl	BLE_bless_isr_Enable
  69:Generated_Source\PSoC4/BLE_bless_isr.c **** }
  49              		.loc 1 69 0
  50 001a C046     		nop
  51 001c BD46     		mov	sp, r7
  52              		@ sp needed
  53 001e 80BD     		pop	{r7, pc}
  54              	.L3:
  55              		.align	2
  56              	.L2:
  57 0020 00000000 		.word	BLE_bless_isr_Interrupt
  58              		.cfi_endproc
  59              	.LFE2:
  60              		.size	BLE_bless_isr_Start, .-BLE_bless_isr_Start
  61              		.section	.text.BLE_bless_isr_StartEx,"ax",%progbits
  62              		.align	2
  63              		.global	BLE_bless_isr_StartEx
  64              		.code	16
  65              		.thumb_func
  66              		.type	BLE_bless_isr_StartEx, %function
  67              	BLE_bless_isr_StartEx:
  68              	.LFB3:
  70:Generated_Source\PSoC4/BLE_bless_isr.c **** 
  71:Generated_Source\PSoC4/BLE_bless_isr.c **** 
  72:Generated_Source\PSoC4/BLE_bless_isr.c **** /*******************************************************************************
  73:Generated_Source\PSoC4/BLE_bless_isr.c **** * Function Name: BLE_bless_isr_StartEx
  74:Generated_Source\PSoC4/BLE_bless_isr.c **** ********************************************************************************
  75:Generated_Source\PSoC4/BLE_bless_isr.c **** *
  76:Generated_Source\PSoC4/BLE_bless_isr.c **** * Summary:
  77:Generated_Source\PSoC4/BLE_bless_isr.c **** *  Sets up the interrupt and enables it. This function disables the interrupt,
  78:Generated_Source\PSoC4/BLE_bless_isr.c **** *  sets the interrupt vector based on the address passed in, sets the priority 
  79:Generated_Source\PSoC4/BLE_bless_isr.c **** *  from the value in the Design Wide Resources Interrupt Editor, then enables 
  80:Generated_Source\PSoC4/BLE_bless_isr.c **** *  the interrupt to the interrupt controller.
  81:Generated_Source\PSoC4/BLE_bless_isr.c **** *  
  82:Generated_Source\PSoC4/BLE_bless_isr.c **** *  When defining ISR functions, the CY_ISR and CY_ISR_PROTO macros should be 
  83:Generated_Source\PSoC4/BLE_bless_isr.c **** *  used to provide consistent definition across compilers:
  84:Generated_Source\PSoC4/BLE_bless_isr.c **** *  
  85:Generated_Source\PSoC4/BLE_bless_isr.c **** *  Function definition example:
  86:Generated_Source\PSoC4/BLE_bless_isr.c **** *   CY_ISR(MyISR)
  87:Generated_Source\PSoC4/BLE_bless_isr.c **** *   {
  88:Generated_Source\PSoC4/BLE_bless_isr.c **** *   }
  89:Generated_Source\PSoC4/BLE_bless_isr.c **** *   Function prototype example:
  90:Generated_Source\PSoC4/BLE_bless_isr.c **** *   CY_ISR_PROTO(MyISR);
  91:Generated_Source\PSoC4/BLE_bless_isr.c **** *
  92:Generated_Source\PSoC4/BLE_bless_isr.c **** * Parameters:  
  93:Generated_Source\PSoC4/BLE_bless_isr.c **** *   address: Address of the ISR to set in the interrupt vector table.
  94:Generated_Source\PSoC4/BLE_bless_isr.c **** *
  95:Generated_Source\PSoC4/BLE_bless_isr.c **** * Return:
  96:Generated_Source\PSoC4/BLE_bless_isr.c **** *   None
  97:Generated_Source\PSoC4/BLE_bless_isr.c **** *
  98:Generated_Source\PSoC4/BLE_bless_isr.c **** *******************************************************************************/
  99:Generated_Source\PSoC4/BLE_bless_isr.c **** void BLE_bless_isr_StartEx(cyisraddress address)
 100:Generated_Source\PSoC4/BLE_bless_isr.c **** {
  69              		.loc 1 100 0
  70              		.cfi_startproc
  71              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccVxWlfZ.s 			page 4


  72              		@ frame_needed = 1, uses_anonymous_args = 0
  73 0000 80B5     		push	{r7, lr}
  74              		.cfi_def_cfa_offset 8
  75              		.cfi_offset 7, -8
  76              		.cfi_offset 14, -4
  77 0002 82B0     		sub	sp, sp, #8
  78              		.cfi_def_cfa_offset 16
  79 0004 00AF     		add	r7, sp, #0
  80              		.cfi_def_cfa_register 7
  81 0006 7860     		str	r0, [r7, #4]
 101:Generated_Source\PSoC4/BLE_bless_isr.c ****     /* For all we know the interrupt is active. */
 102:Generated_Source\PSoC4/BLE_bless_isr.c ****     BLE_bless_isr_Disable();
  82              		.loc 1 102 0
  83 0008 FFF7FEFF 		bl	BLE_bless_isr_Disable
 103:Generated_Source\PSoC4/BLE_bless_isr.c **** 
 104:Generated_Source\PSoC4/BLE_bless_isr.c ****     /* Set the ISR to point to the BLE_bless_isr Interrupt. */
 105:Generated_Source\PSoC4/BLE_bless_isr.c ****     BLE_bless_isr_SetVector(address);
  84              		.loc 1 105 0
  85 000c 7B68     		ldr	r3, [r7, #4]
  86 000e 1800     		movs	r0, r3
  87 0010 FFF7FEFF 		bl	BLE_bless_isr_SetVector
 106:Generated_Source\PSoC4/BLE_bless_isr.c **** 
 107:Generated_Source\PSoC4/BLE_bless_isr.c ****     /* Set the priority. */
 108:Generated_Source\PSoC4/BLE_bless_isr.c ****     BLE_bless_isr_SetPriority((uint8)BLE_bless_isr_INTC_PRIOR_NUMBER);
  88              		.loc 1 108 0
  89 0014 0320     		movs	r0, #3
  90 0016 FFF7FEFF 		bl	BLE_bless_isr_SetPriority
 109:Generated_Source\PSoC4/BLE_bless_isr.c **** 
 110:Generated_Source\PSoC4/BLE_bless_isr.c ****     /* Enable it. */
 111:Generated_Source\PSoC4/BLE_bless_isr.c ****     BLE_bless_isr_Enable();
  91              		.loc 1 111 0
  92 001a FFF7FEFF 		bl	BLE_bless_isr_Enable
 112:Generated_Source\PSoC4/BLE_bless_isr.c **** }
  93              		.loc 1 112 0
  94 001e C046     		nop
  95 0020 BD46     		mov	sp, r7
  96 0022 02B0     		add	sp, sp, #8
  97              		@ sp needed
  98 0024 80BD     		pop	{r7, pc}
  99              		.cfi_endproc
 100              	.LFE3:
 101              		.size	BLE_bless_isr_StartEx, .-BLE_bless_isr_StartEx
 102 0026 C046     		.section	.text.BLE_bless_isr_Stop,"ax",%progbits
 103              		.align	2
 104              		.global	BLE_bless_isr_Stop
 105              		.code	16
 106              		.thumb_func
 107              		.type	BLE_bless_isr_Stop, %function
 108              	BLE_bless_isr_Stop:
 109              	.LFB4:
 113:Generated_Source\PSoC4/BLE_bless_isr.c **** 
 114:Generated_Source\PSoC4/BLE_bless_isr.c **** 
 115:Generated_Source\PSoC4/BLE_bless_isr.c **** /*******************************************************************************
 116:Generated_Source\PSoC4/BLE_bless_isr.c **** * Function Name: BLE_bless_isr_Stop
 117:Generated_Source\PSoC4/BLE_bless_isr.c **** ********************************************************************************
 118:Generated_Source\PSoC4/BLE_bless_isr.c **** *
 119:Generated_Source\PSoC4/BLE_bless_isr.c **** * Summary:
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccVxWlfZ.s 			page 5


 120:Generated_Source\PSoC4/BLE_bless_isr.c **** *   Disables and removes the interrupt.
 121:Generated_Source\PSoC4/BLE_bless_isr.c **** *
 122:Generated_Source\PSoC4/BLE_bless_isr.c **** * Parameters:  
 123:Generated_Source\PSoC4/BLE_bless_isr.c **** *   None
 124:Generated_Source\PSoC4/BLE_bless_isr.c **** *
 125:Generated_Source\PSoC4/BLE_bless_isr.c **** * Return:
 126:Generated_Source\PSoC4/BLE_bless_isr.c **** *   None
 127:Generated_Source\PSoC4/BLE_bless_isr.c **** *
 128:Generated_Source\PSoC4/BLE_bless_isr.c **** *******************************************************************************/
 129:Generated_Source\PSoC4/BLE_bless_isr.c **** void BLE_bless_isr_Stop(void)
 130:Generated_Source\PSoC4/BLE_bless_isr.c **** {
 110              		.loc 1 130 0
 111              		.cfi_startproc
 112              		@ args = 0, pretend = 0, frame = 0
 113              		@ frame_needed = 1, uses_anonymous_args = 0
 114 0000 80B5     		push	{r7, lr}
 115              		.cfi_def_cfa_offset 8
 116              		.cfi_offset 7, -8
 117              		.cfi_offset 14, -4
 118 0002 00AF     		add	r7, sp, #0
 119              		.cfi_def_cfa_register 7
 131:Generated_Source\PSoC4/BLE_bless_isr.c ****     /* Disable this interrupt. */
 132:Generated_Source\PSoC4/BLE_bless_isr.c ****     BLE_bless_isr_Disable();
 120              		.loc 1 132 0
 121 0004 FFF7FEFF 		bl	BLE_bless_isr_Disable
 133:Generated_Source\PSoC4/BLE_bless_isr.c **** 
 134:Generated_Source\PSoC4/BLE_bless_isr.c ****     /* Set the ISR to point to the passive one. */
 135:Generated_Source\PSoC4/BLE_bless_isr.c ****     BLE_bless_isr_SetVector(&IntDefaultHandler);
 122              		.loc 1 135 0
 123 0008 034B     		ldr	r3, .L6
 124 000a 1800     		movs	r0, r3
 125 000c FFF7FEFF 		bl	BLE_bless_isr_SetVector
 136:Generated_Source\PSoC4/BLE_bless_isr.c **** }
 126              		.loc 1 136 0
 127 0010 C046     		nop
 128 0012 BD46     		mov	sp, r7
 129              		@ sp needed
 130 0014 80BD     		pop	{r7, pc}
 131              	.L7:
 132 0016 C046     		.align	2
 133              	.L6:
 134 0018 00000000 		.word	IntDefaultHandler
 135              		.cfi_endproc
 136              	.LFE4:
 137              		.size	BLE_bless_isr_Stop, .-BLE_bless_isr_Stop
 138              		.section	.text.BLE_bless_isr_Interrupt,"ax",%progbits
 139              		.align	2
 140              		.global	BLE_bless_isr_Interrupt
 141              		.code	16
 142              		.thumb_func
 143              		.type	BLE_bless_isr_Interrupt, %function
 144              	BLE_bless_isr_Interrupt:
 145              	.LFB5:
 137:Generated_Source\PSoC4/BLE_bless_isr.c **** 
 138:Generated_Source\PSoC4/BLE_bless_isr.c **** 
 139:Generated_Source\PSoC4/BLE_bless_isr.c **** /*******************************************************************************
 140:Generated_Source\PSoC4/BLE_bless_isr.c **** * Function Name: BLE_bless_isr_Interrupt
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccVxWlfZ.s 			page 6


 141:Generated_Source\PSoC4/BLE_bless_isr.c **** ********************************************************************************
 142:Generated_Source\PSoC4/BLE_bless_isr.c **** *
 143:Generated_Source\PSoC4/BLE_bless_isr.c **** * Summary:
 144:Generated_Source\PSoC4/BLE_bless_isr.c **** *   The default Interrupt Service Routine for BLE_bless_isr.
 145:Generated_Source\PSoC4/BLE_bless_isr.c **** *
 146:Generated_Source\PSoC4/BLE_bless_isr.c **** *   Add custom code between the START and END comments to keep the next version
 147:Generated_Source\PSoC4/BLE_bless_isr.c **** *   of this file from over-writing your code.
 148:Generated_Source\PSoC4/BLE_bless_isr.c **** *
 149:Generated_Source\PSoC4/BLE_bless_isr.c **** *   Note You may use either the default ISR by using this API, or you may define
 150:Generated_Source\PSoC4/BLE_bless_isr.c **** *   your own separate ISR through ISR_StartEx().
 151:Generated_Source\PSoC4/BLE_bless_isr.c **** *
 152:Generated_Source\PSoC4/BLE_bless_isr.c **** * Parameters:  
 153:Generated_Source\PSoC4/BLE_bless_isr.c **** *   None
 154:Generated_Source\PSoC4/BLE_bless_isr.c **** *
 155:Generated_Source\PSoC4/BLE_bless_isr.c **** * Return:
 156:Generated_Source\PSoC4/BLE_bless_isr.c **** *   None
 157:Generated_Source\PSoC4/BLE_bless_isr.c **** *
 158:Generated_Source\PSoC4/BLE_bless_isr.c **** *******************************************************************************/
 159:Generated_Source\PSoC4/BLE_bless_isr.c **** CY_ISR(BLE_bless_isr_Interrupt)
 160:Generated_Source\PSoC4/BLE_bless_isr.c **** {
 146              		.loc 1 160 0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 0
 149              		@ frame_needed = 1, uses_anonymous_args = 0
 150 0000 80B5     		push	{r7, lr}
 151              		.cfi_def_cfa_offset 8
 152              		.cfi_offset 7, -8
 153              		.cfi_offset 14, -4
 154 0002 00AF     		add	r7, sp, #0
 155              		.cfi_def_cfa_register 7
 161:Generated_Source\PSoC4/BLE_bless_isr.c ****     #ifdef BLE_bless_isr_INTERRUPT_INTERRUPT_CALLBACK
 162:Generated_Source\PSoC4/BLE_bless_isr.c ****         BLE_bless_isr_Interrupt_InterruptCallback();
 163:Generated_Source\PSoC4/BLE_bless_isr.c ****     #endif /* BLE_bless_isr_INTERRUPT_INTERRUPT_CALLBACK */ 
 164:Generated_Source\PSoC4/BLE_bless_isr.c **** 
 165:Generated_Source\PSoC4/BLE_bless_isr.c ****     /*  Place your Interrupt code here. */
 166:Generated_Source\PSoC4/BLE_bless_isr.c ****     /* `#START BLE_bless_isr_Interrupt` */
 167:Generated_Source\PSoC4/BLE_bless_isr.c **** 
 168:Generated_Source\PSoC4/BLE_bless_isr.c ****     /* `#END` */
 169:Generated_Source\PSoC4/BLE_bless_isr.c **** }
 156              		.loc 1 169 0
 157 0004 C046     		nop
 158 0006 BD46     		mov	sp, r7
 159              		@ sp needed
 160 0008 80BD     		pop	{r7, pc}
 161              		.cfi_endproc
 162              	.LFE5:
 163              		.size	BLE_bless_isr_Interrupt, .-BLE_bless_isr_Interrupt
 164              		.section	.text.BLE_bless_isr_SetVector,"ax",%progbits
 165              		.align	2
 166              		.global	BLE_bless_isr_SetVector
 167              		.code	16
 168              		.thumb_func
 169              		.type	BLE_bless_isr_SetVector, %function
 170              	BLE_bless_isr_SetVector:
 171              	.LFB6:
 170:Generated_Source\PSoC4/BLE_bless_isr.c **** 
 171:Generated_Source\PSoC4/BLE_bless_isr.c **** 
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccVxWlfZ.s 			page 7


 172:Generated_Source\PSoC4/BLE_bless_isr.c **** /*******************************************************************************
 173:Generated_Source\PSoC4/BLE_bless_isr.c **** * Function Name: BLE_bless_isr_SetVector
 174:Generated_Source\PSoC4/BLE_bless_isr.c **** ********************************************************************************
 175:Generated_Source\PSoC4/BLE_bless_isr.c **** *
 176:Generated_Source\PSoC4/BLE_bless_isr.c **** * Summary:
 177:Generated_Source\PSoC4/BLE_bless_isr.c **** *   Change the ISR vector for the Interrupt. Note calling BLE_bless_isr_Start
 178:Generated_Source\PSoC4/BLE_bless_isr.c **** *   will override any effect this method would have had. To set the vector 
 179:Generated_Source\PSoC4/BLE_bless_isr.c **** *   before the component has been started use BLE_bless_isr_StartEx instead.
 180:Generated_Source\PSoC4/BLE_bless_isr.c **** * 
 181:Generated_Source\PSoC4/BLE_bless_isr.c **** *   When defining ISR functions, the CY_ISR and CY_ISR_PROTO macros should be 
 182:Generated_Source\PSoC4/BLE_bless_isr.c **** *   used to provide consistent definition across compilers:
 183:Generated_Source\PSoC4/BLE_bless_isr.c **** *
 184:Generated_Source\PSoC4/BLE_bless_isr.c **** *   Function definition example:
 185:Generated_Source\PSoC4/BLE_bless_isr.c **** *   CY_ISR(MyISR)
 186:Generated_Source\PSoC4/BLE_bless_isr.c **** *   {
 187:Generated_Source\PSoC4/BLE_bless_isr.c **** *   }
 188:Generated_Source\PSoC4/BLE_bless_isr.c **** *
 189:Generated_Source\PSoC4/BLE_bless_isr.c **** *   Function prototype example:
 190:Generated_Source\PSoC4/BLE_bless_isr.c **** *     CY_ISR_PROTO(MyISR);
 191:Generated_Source\PSoC4/BLE_bless_isr.c **** *
 192:Generated_Source\PSoC4/BLE_bless_isr.c **** * Parameters:
 193:Generated_Source\PSoC4/BLE_bless_isr.c **** *   address: Address of the ISR to set in the interrupt vector table.
 194:Generated_Source\PSoC4/BLE_bless_isr.c **** *
 195:Generated_Source\PSoC4/BLE_bless_isr.c **** * Return:
 196:Generated_Source\PSoC4/BLE_bless_isr.c **** *   None
 197:Generated_Source\PSoC4/BLE_bless_isr.c **** *
 198:Generated_Source\PSoC4/BLE_bless_isr.c **** *******************************************************************************/
 199:Generated_Source\PSoC4/BLE_bless_isr.c **** void BLE_bless_isr_SetVector(cyisraddress address)
 200:Generated_Source\PSoC4/BLE_bless_isr.c **** {
 172              		.loc 1 200 0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 8
 175              		@ frame_needed = 1, uses_anonymous_args = 0
 176 0000 80B5     		push	{r7, lr}
 177              		.cfi_def_cfa_offset 8
 178              		.cfi_offset 7, -8
 179              		.cfi_offset 14, -4
 180 0002 82B0     		sub	sp, sp, #8
 181              		.cfi_def_cfa_offset 16
 182 0004 00AF     		add	r7, sp, #0
 183              		.cfi_def_cfa_register 7
 184 0006 7860     		str	r0, [r7, #4]
 201:Generated_Source\PSoC4/BLE_bless_isr.c ****     CyRamVectors[CYINT_IRQ_BASE + BLE_bless_isr__INTC_NUMBER] = address;
 185              		.loc 1 201 0
 186 0008 034B     		ldr	r3, .L10
 187 000a 7A68     		ldr	r2, [r7, #4]
 188 000c 1A67     		str	r2, [r3, #112]
 202:Generated_Source\PSoC4/BLE_bless_isr.c **** }
 189              		.loc 1 202 0
 190 000e C046     		nop
 191 0010 BD46     		mov	sp, r7
 192 0012 02B0     		add	sp, sp, #8
 193              		@ sp needed
 194 0014 80BD     		pop	{r7, pc}
 195              	.L11:
 196 0016 C046     		.align	2
 197              	.L10:
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccVxWlfZ.s 			page 8


 198 0018 00000000 		.word	CyRamVectors
 199              		.cfi_endproc
 200              	.LFE6:
 201              		.size	BLE_bless_isr_SetVector, .-BLE_bless_isr_SetVector
 202              		.section	.text.BLE_bless_isr_GetVector,"ax",%progbits
 203              		.align	2
 204              		.global	BLE_bless_isr_GetVector
 205              		.code	16
 206              		.thumb_func
 207              		.type	BLE_bless_isr_GetVector, %function
 208              	BLE_bless_isr_GetVector:
 209              	.LFB7:
 203:Generated_Source\PSoC4/BLE_bless_isr.c **** 
 204:Generated_Source\PSoC4/BLE_bless_isr.c **** 
 205:Generated_Source\PSoC4/BLE_bless_isr.c **** /*******************************************************************************
 206:Generated_Source\PSoC4/BLE_bless_isr.c **** * Function Name: BLE_bless_isr_GetVector
 207:Generated_Source\PSoC4/BLE_bless_isr.c **** ********************************************************************************
 208:Generated_Source\PSoC4/BLE_bless_isr.c **** *
 209:Generated_Source\PSoC4/BLE_bless_isr.c **** * Summary:
 210:Generated_Source\PSoC4/BLE_bless_isr.c **** *   Gets the "address" of the current ISR vector for the Interrupt.
 211:Generated_Source\PSoC4/BLE_bless_isr.c **** *
 212:Generated_Source\PSoC4/BLE_bless_isr.c **** * Parameters:
 213:Generated_Source\PSoC4/BLE_bless_isr.c **** *   None
 214:Generated_Source\PSoC4/BLE_bless_isr.c **** *
 215:Generated_Source\PSoC4/BLE_bless_isr.c **** * Return:
 216:Generated_Source\PSoC4/BLE_bless_isr.c **** *   Address of the ISR in the interrupt vector table.
 217:Generated_Source\PSoC4/BLE_bless_isr.c **** *
 218:Generated_Source\PSoC4/BLE_bless_isr.c **** *******************************************************************************/
 219:Generated_Source\PSoC4/BLE_bless_isr.c **** cyisraddress BLE_bless_isr_GetVector(void)
 220:Generated_Source\PSoC4/BLE_bless_isr.c **** {
 210              		.loc 1 220 0
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 0
 213              		@ frame_needed = 1, uses_anonymous_args = 0
 214 0000 80B5     		push	{r7, lr}
 215              		.cfi_def_cfa_offset 8
 216              		.cfi_offset 7, -8
 217              		.cfi_offset 14, -4
 218 0002 00AF     		add	r7, sp, #0
 219              		.cfi_def_cfa_register 7
 221:Generated_Source\PSoC4/BLE_bless_isr.c ****     return CyRamVectors[CYINT_IRQ_BASE + BLE_bless_isr__INTC_NUMBER];
 220              		.loc 1 221 0
 221 0004 024B     		ldr	r3, .L14
 222 0006 1B6F     		ldr	r3, [r3, #112]
 222:Generated_Source\PSoC4/BLE_bless_isr.c **** }
 223              		.loc 1 222 0
 224 0008 1800     		movs	r0, r3
 225 000a BD46     		mov	sp, r7
 226              		@ sp needed
 227 000c 80BD     		pop	{r7, pc}
 228              	.L15:
 229 000e C046     		.align	2
 230              	.L14:
 231 0010 00000000 		.word	CyRamVectors
 232              		.cfi_endproc
 233              	.LFE7:
 234              		.size	BLE_bless_isr_GetVector, .-BLE_bless_isr_GetVector
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccVxWlfZ.s 			page 9


 235              		.section	.text.BLE_bless_isr_SetPriority,"ax",%progbits
 236              		.align	2
 237              		.global	BLE_bless_isr_SetPriority
 238              		.code	16
 239              		.thumb_func
 240              		.type	BLE_bless_isr_SetPriority, %function
 241              	BLE_bless_isr_SetPriority:
 242              	.LFB8:
 223:Generated_Source\PSoC4/BLE_bless_isr.c **** 
 224:Generated_Source\PSoC4/BLE_bless_isr.c **** 
 225:Generated_Source\PSoC4/BLE_bless_isr.c **** /*******************************************************************************
 226:Generated_Source\PSoC4/BLE_bless_isr.c **** * Function Name: BLE_bless_isr_SetPriority
 227:Generated_Source\PSoC4/BLE_bless_isr.c **** ********************************************************************************
 228:Generated_Source\PSoC4/BLE_bless_isr.c **** *
 229:Generated_Source\PSoC4/BLE_bless_isr.c **** * Summary:
 230:Generated_Source\PSoC4/BLE_bless_isr.c **** *   Sets the Priority of the Interrupt. 
 231:Generated_Source\PSoC4/BLE_bless_isr.c **** *
 232:Generated_Source\PSoC4/BLE_bless_isr.c **** *   Note calling BLE_bless_isr_Start or BLE_bless_isr_StartEx will 
 233:Generated_Source\PSoC4/BLE_bless_isr.c **** *   override any effect this API would have had. This API should only be called
 234:Generated_Source\PSoC4/BLE_bless_isr.c **** *   after BLE_bless_isr_Start or BLE_bless_isr_StartEx has been called. 
 235:Generated_Source\PSoC4/BLE_bless_isr.c **** *   To set the initial priority for the component, use the Design-Wide Resources
 236:Generated_Source\PSoC4/BLE_bless_isr.c **** *   Interrupt Editor.
 237:Generated_Source\PSoC4/BLE_bless_isr.c **** *
 238:Generated_Source\PSoC4/BLE_bless_isr.c **** *   Note This API has no effect on Non-maskable interrupt NMI).
 239:Generated_Source\PSoC4/BLE_bless_isr.c **** *
 240:Generated_Source\PSoC4/BLE_bless_isr.c **** * Parameters:
 241:Generated_Source\PSoC4/BLE_bless_isr.c **** *   priority: Priority of the interrupt, 0 being the highest priority
 242:Generated_Source\PSoC4/BLE_bless_isr.c **** *             PSoC 3 and PSoC 5LP: Priority is from 0 to 7.
 243:Generated_Source\PSoC4/BLE_bless_isr.c **** *             PSoC 4: Priority is from 0 to 3.
 244:Generated_Source\PSoC4/BLE_bless_isr.c **** *
 245:Generated_Source\PSoC4/BLE_bless_isr.c **** * Return:
 246:Generated_Source\PSoC4/BLE_bless_isr.c **** *   None
 247:Generated_Source\PSoC4/BLE_bless_isr.c **** *
 248:Generated_Source\PSoC4/BLE_bless_isr.c **** *******************************************************************************/
 249:Generated_Source\PSoC4/BLE_bless_isr.c **** void BLE_bless_isr_SetPriority(uint8 priority)
 250:Generated_Source\PSoC4/BLE_bless_isr.c **** {
 243              		.loc 1 250 0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 16
 246              		@ frame_needed = 1, uses_anonymous_args = 0
 247 0000 90B5     		push	{r4, r7, lr}
 248              		.cfi_def_cfa_offset 12
 249              		.cfi_offset 4, -12
 250              		.cfi_offset 7, -8
 251              		.cfi_offset 14, -4
 252 0002 85B0     		sub	sp, sp, #20
 253              		.cfi_def_cfa_offset 32
 254 0004 00AF     		add	r7, sp, #0
 255              		.cfi_def_cfa_register 7
 256 0006 0200     		movs	r2, r0
 257 0008 FB1D     		adds	r3, r7, #7
 258 000a 1A70     		strb	r2, [r3]
 251:Generated_Source\PSoC4/BLE_bless_isr.c **** 	uint8 interruptState;
 252:Generated_Source\PSoC4/BLE_bless_isr.c ****     uint32 priorityOffset = ((BLE_bless_isr__INTC_NUMBER % 4u) * 8u) + 6u;
 259              		.loc 1 252 0
 260 000c 0623     		movs	r3, #6
 261 000e FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccVxWlfZ.s 			page 10


 253:Generated_Source\PSoC4/BLE_bless_isr.c ****     
 254:Generated_Source\PSoC4/BLE_bless_isr.c **** 	interruptState = CyEnterCriticalSection();
 262              		.loc 1 254 0
 263 0010 0B23     		movs	r3, #11
 264 0012 FC18     		adds	r4, r7, r3
 265 0014 FFF7FEFF 		bl	CyEnterCriticalSection
 266 0018 0300     		movs	r3, r0
 267 001a 2370     		strb	r3, [r4]
 255:Generated_Source\PSoC4/BLE_bless_isr.c ****     *BLE_bless_isr_INTC_PRIOR = (*BLE_bless_isr_INTC_PRIOR & (uint32)(~BLE_bless_isr__INTC_PRIOR_MA
 268              		.loc 1 255 0
 269 001c 0B4B     		ldr	r3, .L17
 270 001e 0B4A     		ldr	r2, .L17
 271 0020 1268     		ldr	r2, [r2]
 272 0022 C021     		movs	r1, #192
 273 0024 8A43     		bics	r2, r1
 274 0026 1100     		movs	r1, r2
 256:Generated_Source\PSoC4/BLE_bless_isr.c ****                                     ((uint32)priority << priorityOffset);
 275              		.loc 1 256 0
 276 0028 FA1D     		adds	r2, r7, #7
 277 002a 1078     		ldrb	r0, [r2]
 278 002c FA68     		ldr	r2, [r7, #12]
 279 002e 9040     		lsls	r0, r0, r2
 280 0030 0200     		movs	r2, r0
 255:Generated_Source\PSoC4/BLE_bless_isr.c ****     *BLE_bless_isr_INTC_PRIOR = (*BLE_bless_isr_INTC_PRIOR & (uint32)(~BLE_bless_isr__INTC_PRIOR_MA
 281              		.loc 1 255 0
 282 0032 0A43     		orrs	r2, r1
 283 0034 1A60     		str	r2, [r3]
 257:Generated_Source\PSoC4/BLE_bless_isr.c **** 	CyExitCriticalSection(interruptState);
 284              		.loc 1 257 0
 285 0036 0B23     		movs	r3, #11
 286 0038 FB18     		adds	r3, r7, r3
 287 003a 1B78     		ldrb	r3, [r3]
 288 003c 1800     		movs	r0, r3
 289 003e FFF7FEFF 		bl	CyExitCriticalSection
 258:Generated_Source\PSoC4/BLE_bless_isr.c **** }
 290              		.loc 1 258 0
 291 0042 C046     		nop
 292 0044 BD46     		mov	sp, r7
 293 0046 05B0     		add	sp, sp, #20
 294              		@ sp needed
 295 0048 90BD     		pop	{r4, r7, pc}
 296              	.L18:
 297 004a C046     		.align	2
 298              	.L17:
 299 004c 0CE400E0 		.word	-536812532
 300              		.cfi_endproc
 301              	.LFE8:
 302              		.size	BLE_bless_isr_SetPriority, .-BLE_bless_isr_SetPriority
 303              		.section	.text.BLE_bless_isr_GetPriority,"ax",%progbits
 304              		.align	2
 305              		.global	BLE_bless_isr_GetPriority
 306              		.code	16
 307              		.thumb_func
 308              		.type	BLE_bless_isr_GetPriority, %function
 309              	BLE_bless_isr_GetPriority:
 310              	.LFB9:
 259:Generated_Source\PSoC4/BLE_bless_isr.c **** 
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccVxWlfZ.s 			page 11


 260:Generated_Source\PSoC4/BLE_bless_isr.c **** 
 261:Generated_Source\PSoC4/BLE_bless_isr.c **** /*******************************************************************************
 262:Generated_Source\PSoC4/BLE_bless_isr.c **** * Function Name: BLE_bless_isr_GetPriority
 263:Generated_Source\PSoC4/BLE_bless_isr.c **** ********************************************************************************
 264:Generated_Source\PSoC4/BLE_bless_isr.c **** *
 265:Generated_Source\PSoC4/BLE_bless_isr.c **** * Summary:
 266:Generated_Source\PSoC4/BLE_bless_isr.c **** *   Gets the Priority of the Interrupt.
 267:Generated_Source\PSoC4/BLE_bless_isr.c **** *
 268:Generated_Source\PSoC4/BLE_bless_isr.c **** * Parameters:
 269:Generated_Source\PSoC4/BLE_bless_isr.c **** *   None
 270:Generated_Source\PSoC4/BLE_bless_isr.c **** *
 271:Generated_Source\PSoC4/BLE_bless_isr.c **** * Return:
 272:Generated_Source\PSoC4/BLE_bless_isr.c **** *   Priority of the interrupt, 0 being the highest priority
 273:Generated_Source\PSoC4/BLE_bless_isr.c **** *    PSoC 3 and PSoC 5LP: Priority is from 0 to 7.
 274:Generated_Source\PSoC4/BLE_bless_isr.c **** *    PSoC 4: Priority is from 0 to 3.
 275:Generated_Source\PSoC4/BLE_bless_isr.c **** *
 276:Generated_Source\PSoC4/BLE_bless_isr.c **** *******************************************************************************/
 277:Generated_Source\PSoC4/BLE_bless_isr.c **** uint8 BLE_bless_isr_GetPriority(void)
 278:Generated_Source\PSoC4/BLE_bless_isr.c **** {
 311              		.loc 1 278 0
 312              		.cfi_startproc
 313              		@ args = 0, pretend = 0, frame = 8
 314              		@ frame_needed = 1, uses_anonymous_args = 0
 315 0000 80B5     		push	{r7, lr}
 316              		.cfi_def_cfa_offset 8
 317              		.cfi_offset 7, -8
 318              		.cfi_offset 14, -4
 319 0002 82B0     		sub	sp, sp, #8
 320              		.cfi_def_cfa_offset 16
 321 0004 00AF     		add	r7, sp, #0
 322              		.cfi_def_cfa_register 7
 279:Generated_Source\PSoC4/BLE_bless_isr.c ****     uint32 priority;
 280:Generated_Source\PSoC4/BLE_bless_isr.c **** 	uint32 priorityOffset = ((BLE_bless_isr__INTC_NUMBER % 4u) * 8u) + 6u;
 323              		.loc 1 280 0
 324 0006 0623     		movs	r3, #6
 325 0008 7B60     		str	r3, [r7, #4]
 281:Generated_Source\PSoC4/BLE_bless_isr.c **** 
 282:Generated_Source\PSoC4/BLE_bless_isr.c ****     priority = (*BLE_bless_isr_INTC_PRIOR & BLE_bless_isr__INTC_PRIOR_MASK) >> priorityOffset;
 326              		.loc 1 282 0
 327 000a 074B     		ldr	r3, .L21
 328 000c 1B68     		ldr	r3, [r3]
 329 000e C022     		movs	r2, #192
 330 0010 1A40     		ands	r2, r3
 331 0012 7B68     		ldr	r3, [r7, #4]
 332 0014 DA40     		lsrs	r2, r2, r3
 333 0016 1300     		movs	r3, r2
 334 0018 3B60     		str	r3, [r7]
 283:Generated_Source\PSoC4/BLE_bless_isr.c **** 
 284:Generated_Source\PSoC4/BLE_bless_isr.c ****     return (uint8)priority;
 335              		.loc 1 284 0
 336 001a 3B68     		ldr	r3, [r7]
 337 001c DBB2     		uxtb	r3, r3
 285:Generated_Source\PSoC4/BLE_bless_isr.c **** }
 338              		.loc 1 285 0
 339 001e 1800     		movs	r0, r3
 340 0020 BD46     		mov	sp, r7
 341 0022 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccVxWlfZ.s 			page 12


 342              		@ sp needed
 343 0024 80BD     		pop	{r7, pc}
 344              	.L22:
 345 0026 C046     		.align	2
 346              	.L21:
 347 0028 0CE400E0 		.word	-536812532
 348              		.cfi_endproc
 349              	.LFE9:
 350              		.size	BLE_bless_isr_GetPriority, .-BLE_bless_isr_GetPriority
 351              		.section	.text.BLE_bless_isr_Enable,"ax",%progbits
 352              		.align	2
 353              		.global	BLE_bless_isr_Enable
 354              		.code	16
 355              		.thumb_func
 356              		.type	BLE_bless_isr_Enable, %function
 357              	BLE_bless_isr_Enable:
 358              	.LFB10:
 286:Generated_Source\PSoC4/BLE_bless_isr.c **** 
 287:Generated_Source\PSoC4/BLE_bless_isr.c **** 
 288:Generated_Source\PSoC4/BLE_bless_isr.c **** /*******************************************************************************
 289:Generated_Source\PSoC4/BLE_bless_isr.c **** * Function Name: BLE_bless_isr_Enable
 290:Generated_Source\PSoC4/BLE_bless_isr.c **** ********************************************************************************
 291:Generated_Source\PSoC4/BLE_bless_isr.c **** *
 292:Generated_Source\PSoC4/BLE_bless_isr.c **** * Summary:
 293:Generated_Source\PSoC4/BLE_bless_isr.c **** *   Enables the interrupt to the interrupt controller. Do not call this function
 294:Generated_Source\PSoC4/BLE_bless_isr.c **** *   unless ISR_Start() has been called or the functionality of the ISR_Start() 
 295:Generated_Source\PSoC4/BLE_bless_isr.c **** *   function, which sets the vector and the priority, has been called.
 296:Generated_Source\PSoC4/BLE_bless_isr.c **** *
 297:Generated_Source\PSoC4/BLE_bless_isr.c **** * Parameters:
 298:Generated_Source\PSoC4/BLE_bless_isr.c **** *   None
 299:Generated_Source\PSoC4/BLE_bless_isr.c **** *
 300:Generated_Source\PSoC4/BLE_bless_isr.c **** * Return:
 301:Generated_Source\PSoC4/BLE_bless_isr.c **** *   None
 302:Generated_Source\PSoC4/BLE_bless_isr.c **** *
 303:Generated_Source\PSoC4/BLE_bless_isr.c **** *******************************************************************************/
 304:Generated_Source\PSoC4/BLE_bless_isr.c **** void BLE_bless_isr_Enable(void)
 305:Generated_Source\PSoC4/BLE_bless_isr.c **** {
 359              		.loc 1 305 0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 0
 362              		@ frame_needed = 1, uses_anonymous_args = 0
 363 0000 80B5     		push	{r7, lr}
 364              		.cfi_def_cfa_offset 8
 365              		.cfi_offset 7, -8
 366              		.cfi_offset 14, -4
 367 0002 00AF     		add	r7, sp, #0
 368              		.cfi_def_cfa_register 7
 306:Generated_Source\PSoC4/BLE_bless_isr.c ****     /* Enable the general interrupt. */
 307:Generated_Source\PSoC4/BLE_bless_isr.c ****     *BLE_bless_isr_INTC_SET_EN = BLE_bless_isr__INTC_MASK;
 369              		.loc 1 307 0
 370 0004 034B     		ldr	r3, .L24
 371 0006 8022     		movs	r2, #128
 372 0008 5201     		lsls	r2, r2, #5
 373 000a 1A60     		str	r2, [r3]
 308:Generated_Source\PSoC4/BLE_bless_isr.c **** }
 374              		.loc 1 308 0
 375 000c C046     		nop
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccVxWlfZ.s 			page 13


 376 000e BD46     		mov	sp, r7
 377              		@ sp needed
 378 0010 80BD     		pop	{r7, pc}
 379              	.L25:
 380 0012 C046     		.align	2
 381              	.L24:
 382 0014 00E100E0 		.word	-536813312
 383              		.cfi_endproc
 384              	.LFE10:
 385              		.size	BLE_bless_isr_Enable, .-BLE_bless_isr_Enable
 386              		.section	.text.BLE_bless_isr_GetState,"ax",%progbits
 387              		.align	2
 388              		.global	BLE_bless_isr_GetState
 389              		.code	16
 390              		.thumb_func
 391              		.type	BLE_bless_isr_GetState, %function
 392              	BLE_bless_isr_GetState:
 393              	.LFB11:
 309:Generated_Source\PSoC4/BLE_bless_isr.c **** 
 310:Generated_Source\PSoC4/BLE_bless_isr.c **** 
 311:Generated_Source\PSoC4/BLE_bless_isr.c **** /*******************************************************************************
 312:Generated_Source\PSoC4/BLE_bless_isr.c **** * Function Name: BLE_bless_isr_GetState
 313:Generated_Source\PSoC4/BLE_bless_isr.c **** ********************************************************************************
 314:Generated_Source\PSoC4/BLE_bless_isr.c **** *
 315:Generated_Source\PSoC4/BLE_bless_isr.c **** * Summary:
 316:Generated_Source\PSoC4/BLE_bless_isr.c **** *   Gets the state (enabled, disabled) of the Interrupt.
 317:Generated_Source\PSoC4/BLE_bless_isr.c **** *
 318:Generated_Source\PSoC4/BLE_bless_isr.c **** * Parameters:
 319:Generated_Source\PSoC4/BLE_bless_isr.c **** *   None
 320:Generated_Source\PSoC4/BLE_bless_isr.c **** *
 321:Generated_Source\PSoC4/BLE_bless_isr.c **** * Return:
 322:Generated_Source\PSoC4/BLE_bless_isr.c **** *   1 if enabled, 0 if disabled.
 323:Generated_Source\PSoC4/BLE_bless_isr.c **** *
 324:Generated_Source\PSoC4/BLE_bless_isr.c **** *******************************************************************************/
 325:Generated_Source\PSoC4/BLE_bless_isr.c **** uint8 BLE_bless_isr_GetState(void)
 326:Generated_Source\PSoC4/BLE_bless_isr.c **** {
 394              		.loc 1 326 0
 395              		.cfi_startproc
 396              		@ args = 0, pretend = 0, frame = 0
 397              		@ frame_needed = 1, uses_anonymous_args = 0
 398 0000 80B5     		push	{r7, lr}
 399              		.cfi_def_cfa_offset 8
 400              		.cfi_offset 7, -8
 401              		.cfi_offset 14, -4
 402 0002 00AF     		add	r7, sp, #0
 403              		.cfi_def_cfa_register 7
 327:Generated_Source\PSoC4/BLE_bless_isr.c ****     /* Get the state of the general interrupt. */
 328:Generated_Source\PSoC4/BLE_bless_isr.c ****     return ((*BLE_bless_isr_INTC_SET_EN & (uint32)BLE_bless_isr__INTC_MASK) != 0u) ? 1u:0u;
 404              		.loc 1 328 0
 405 0004 054B     		ldr	r3, .L30
 406 0006 1A68     		ldr	r2, [r3]
 407 0008 8023     		movs	r3, #128
 408 000a 5B01     		lsls	r3, r3, #5
 409 000c 1340     		ands	r3, r2
 410 000e 01D0     		beq	.L27
 411              		.loc 1 328 0 is_stmt 0 discriminator 1
 412 0010 0123     		movs	r3, #1
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccVxWlfZ.s 			page 14


 413 0012 00E0     		b	.L28
 414              	.L27:
 415              		.loc 1 328 0 discriminator 2
 416 0014 0023     		movs	r3, #0
 417              	.L28:
 329:Generated_Source\PSoC4/BLE_bless_isr.c **** }
 418              		.loc 1 329 0 is_stmt 1 discriminator 4
 419 0016 1800     		movs	r0, r3
 420 0018 BD46     		mov	sp, r7
 421              		@ sp needed
 422 001a 80BD     		pop	{r7, pc}
 423              	.L31:
 424              		.align	2
 425              	.L30:
 426 001c 00E100E0 		.word	-536813312
 427              		.cfi_endproc
 428              	.LFE11:
 429              		.size	BLE_bless_isr_GetState, .-BLE_bless_isr_GetState
 430              		.section	.text.BLE_bless_isr_Disable,"ax",%progbits
 431              		.align	2
 432              		.global	BLE_bless_isr_Disable
 433              		.code	16
 434              		.thumb_func
 435              		.type	BLE_bless_isr_Disable, %function
 436              	BLE_bless_isr_Disable:
 437              	.LFB12:
 330:Generated_Source\PSoC4/BLE_bless_isr.c **** 
 331:Generated_Source\PSoC4/BLE_bless_isr.c **** 
 332:Generated_Source\PSoC4/BLE_bless_isr.c **** /*******************************************************************************
 333:Generated_Source\PSoC4/BLE_bless_isr.c **** * Function Name: BLE_bless_isr_Disable
 334:Generated_Source\PSoC4/BLE_bless_isr.c **** ********************************************************************************
 335:Generated_Source\PSoC4/BLE_bless_isr.c **** *
 336:Generated_Source\PSoC4/BLE_bless_isr.c **** * Summary:
 337:Generated_Source\PSoC4/BLE_bless_isr.c **** *   Disables the Interrupt in the interrupt controller.
 338:Generated_Source\PSoC4/BLE_bless_isr.c **** *
 339:Generated_Source\PSoC4/BLE_bless_isr.c **** * Parameters:
 340:Generated_Source\PSoC4/BLE_bless_isr.c **** *   None
 341:Generated_Source\PSoC4/BLE_bless_isr.c **** *
 342:Generated_Source\PSoC4/BLE_bless_isr.c **** * Return:
 343:Generated_Source\PSoC4/BLE_bless_isr.c **** *   None
 344:Generated_Source\PSoC4/BLE_bless_isr.c **** *
 345:Generated_Source\PSoC4/BLE_bless_isr.c **** *******************************************************************************/
 346:Generated_Source\PSoC4/BLE_bless_isr.c **** void BLE_bless_isr_Disable(void)
 347:Generated_Source\PSoC4/BLE_bless_isr.c **** {
 438              		.loc 1 347 0
 439              		.cfi_startproc
 440              		@ args = 0, pretend = 0, frame = 0
 441              		@ frame_needed = 1, uses_anonymous_args = 0
 442 0000 80B5     		push	{r7, lr}
 443              		.cfi_def_cfa_offset 8
 444              		.cfi_offset 7, -8
 445              		.cfi_offset 14, -4
 446 0002 00AF     		add	r7, sp, #0
 447              		.cfi_def_cfa_register 7
 348:Generated_Source\PSoC4/BLE_bless_isr.c ****     /* Disable the general interrupt. */
 349:Generated_Source\PSoC4/BLE_bless_isr.c ****     *BLE_bless_isr_INTC_CLR_EN = BLE_bless_isr__INTC_MASK;
 448              		.loc 1 349 0
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccVxWlfZ.s 			page 15


 449 0004 034B     		ldr	r3, .L33
 450 0006 8022     		movs	r2, #128
 451 0008 5201     		lsls	r2, r2, #5
 452 000a 1A60     		str	r2, [r3]
 350:Generated_Source\PSoC4/BLE_bless_isr.c **** }
 453              		.loc 1 350 0
 454 000c C046     		nop
 455 000e BD46     		mov	sp, r7
 456              		@ sp needed
 457 0010 80BD     		pop	{r7, pc}
 458              	.L34:
 459 0012 C046     		.align	2
 460              	.L33:
 461 0014 80E100E0 		.word	-536813184
 462              		.cfi_endproc
 463              	.LFE12:
 464              		.size	BLE_bless_isr_Disable, .-BLE_bless_isr_Disable
 465              		.section	.text.BLE_bless_isr_SetPending,"ax",%progbits
 466              		.align	2
 467              		.global	BLE_bless_isr_SetPending
 468              		.code	16
 469              		.thumb_func
 470              		.type	BLE_bless_isr_SetPending, %function
 471              	BLE_bless_isr_SetPending:
 472              	.LFB13:
 351:Generated_Source\PSoC4/BLE_bless_isr.c **** 
 352:Generated_Source\PSoC4/BLE_bless_isr.c **** 
 353:Generated_Source\PSoC4/BLE_bless_isr.c **** /*******************************************************************************
 354:Generated_Source\PSoC4/BLE_bless_isr.c **** * Function Name: BLE_bless_isr_SetPending
 355:Generated_Source\PSoC4/BLE_bless_isr.c **** ********************************************************************************
 356:Generated_Source\PSoC4/BLE_bless_isr.c **** *
 357:Generated_Source\PSoC4/BLE_bless_isr.c **** * Summary:
 358:Generated_Source\PSoC4/BLE_bless_isr.c **** *   Causes the Interrupt to enter the pending state, a software method of
 359:Generated_Source\PSoC4/BLE_bless_isr.c **** *   generating the interrupt.
 360:Generated_Source\PSoC4/BLE_bless_isr.c **** *
 361:Generated_Source\PSoC4/BLE_bless_isr.c **** * Parameters:
 362:Generated_Source\PSoC4/BLE_bless_isr.c **** *   None
 363:Generated_Source\PSoC4/BLE_bless_isr.c **** *
 364:Generated_Source\PSoC4/BLE_bless_isr.c **** * Return:
 365:Generated_Source\PSoC4/BLE_bless_isr.c **** *   None
 366:Generated_Source\PSoC4/BLE_bless_isr.c **** *
 367:Generated_Source\PSoC4/BLE_bless_isr.c **** * Side Effects:
 368:Generated_Source\PSoC4/BLE_bless_isr.c **** *   If interrupts are enabled and the interrupt is set up properly, the ISR is
 369:Generated_Source\PSoC4/BLE_bless_isr.c **** *   entered (depending on the priority of this interrupt and other pending 
 370:Generated_Source\PSoC4/BLE_bless_isr.c **** *   interrupts).
 371:Generated_Source\PSoC4/BLE_bless_isr.c **** *
 372:Generated_Source\PSoC4/BLE_bless_isr.c **** *******************************************************************************/
 373:Generated_Source\PSoC4/BLE_bless_isr.c **** void BLE_bless_isr_SetPending(void)
 374:Generated_Source\PSoC4/BLE_bless_isr.c **** {
 473              		.loc 1 374 0
 474              		.cfi_startproc
 475              		@ args = 0, pretend = 0, frame = 0
 476              		@ frame_needed = 1, uses_anonymous_args = 0
 477 0000 80B5     		push	{r7, lr}
 478              		.cfi_def_cfa_offset 8
 479              		.cfi_offset 7, -8
 480              		.cfi_offset 14, -4
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccVxWlfZ.s 			page 16


 481 0002 00AF     		add	r7, sp, #0
 482              		.cfi_def_cfa_register 7
 375:Generated_Source\PSoC4/BLE_bless_isr.c ****     *BLE_bless_isr_INTC_SET_PD = BLE_bless_isr__INTC_MASK;
 483              		.loc 1 375 0
 484 0004 034B     		ldr	r3, .L36
 485 0006 8022     		movs	r2, #128
 486 0008 5201     		lsls	r2, r2, #5
 487 000a 1A60     		str	r2, [r3]
 376:Generated_Source\PSoC4/BLE_bless_isr.c **** }
 488              		.loc 1 376 0
 489 000c C046     		nop
 490 000e BD46     		mov	sp, r7
 491              		@ sp needed
 492 0010 80BD     		pop	{r7, pc}
 493              	.L37:
 494 0012 C046     		.align	2
 495              	.L36:
 496 0014 00E200E0 		.word	-536813056
 497              		.cfi_endproc
 498              	.LFE13:
 499              		.size	BLE_bless_isr_SetPending, .-BLE_bless_isr_SetPending
 500              		.section	.text.BLE_bless_isr_ClearPending,"ax",%progbits
 501              		.align	2
 502              		.global	BLE_bless_isr_ClearPending
 503              		.code	16
 504              		.thumb_func
 505              		.type	BLE_bless_isr_ClearPending, %function
 506              	BLE_bless_isr_ClearPending:
 507              	.LFB14:
 377:Generated_Source\PSoC4/BLE_bless_isr.c **** 
 378:Generated_Source\PSoC4/BLE_bless_isr.c **** 
 379:Generated_Source\PSoC4/BLE_bless_isr.c **** /*******************************************************************************
 380:Generated_Source\PSoC4/BLE_bless_isr.c **** * Function Name: BLE_bless_isr_ClearPending
 381:Generated_Source\PSoC4/BLE_bless_isr.c **** ********************************************************************************
 382:Generated_Source\PSoC4/BLE_bless_isr.c **** *
 383:Generated_Source\PSoC4/BLE_bless_isr.c **** * Summary:
 384:Generated_Source\PSoC4/BLE_bless_isr.c **** *   Clears a pending interrupt in the interrupt controller.
 385:Generated_Source\PSoC4/BLE_bless_isr.c **** *
 386:Generated_Source\PSoC4/BLE_bless_isr.c **** *   Note Some interrupt sources are clear-on-read and require the block 
 387:Generated_Source\PSoC4/BLE_bless_isr.c **** *   interrupt/status register to be read/cleared with the appropriate block API 
 388:Generated_Source\PSoC4/BLE_bless_isr.c **** *   (GPIO, UART, and so on). Otherwise the ISR will continue to remain in 
 389:Generated_Source\PSoC4/BLE_bless_isr.c **** *   pending state even though the interrupt itself is cleared using this API.
 390:Generated_Source\PSoC4/BLE_bless_isr.c **** *
 391:Generated_Source\PSoC4/BLE_bless_isr.c **** * Parameters:
 392:Generated_Source\PSoC4/BLE_bless_isr.c **** *   None
 393:Generated_Source\PSoC4/BLE_bless_isr.c **** *
 394:Generated_Source\PSoC4/BLE_bless_isr.c **** * Return:
 395:Generated_Source\PSoC4/BLE_bless_isr.c **** *   None
 396:Generated_Source\PSoC4/BLE_bless_isr.c **** *
 397:Generated_Source\PSoC4/BLE_bless_isr.c **** *******************************************************************************/
 398:Generated_Source\PSoC4/BLE_bless_isr.c **** void BLE_bless_isr_ClearPending(void)
 399:Generated_Source\PSoC4/BLE_bless_isr.c **** {
 508              		.loc 1 399 0
 509              		.cfi_startproc
 510              		@ args = 0, pretend = 0, frame = 0
 511              		@ frame_needed = 1, uses_anonymous_args = 0
 512 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccVxWlfZ.s 			page 17


 513              		.cfi_def_cfa_offset 8
 514              		.cfi_offset 7, -8
 515              		.cfi_offset 14, -4
 516 0002 00AF     		add	r7, sp, #0
 517              		.cfi_def_cfa_register 7
 400:Generated_Source\PSoC4/BLE_bless_isr.c ****     *BLE_bless_isr_INTC_CLR_PD = BLE_bless_isr__INTC_MASK;
 518              		.loc 1 400 0
 519 0004 034B     		ldr	r3, .L39
 520 0006 8022     		movs	r2, #128
 521 0008 5201     		lsls	r2, r2, #5
 522 000a 1A60     		str	r2, [r3]
 401:Generated_Source\PSoC4/BLE_bless_isr.c **** }
 523              		.loc 1 401 0
 524 000c C046     		nop
 525 000e BD46     		mov	sp, r7
 526              		@ sp needed
 527 0010 80BD     		pop	{r7, pc}
 528              	.L40:
 529 0012 C046     		.align	2
 530              	.L39:
 531 0014 80E200E0 		.word	-536812928
 532              		.cfi_endproc
 533              	.LFE14:
 534              		.size	BLE_bless_isr_ClearPending, .-BLE_bless_isr_ClearPending
 535              		.text
 536              	.Letext0:
 537              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 538              		.section	.debug_info,"",%progbits
 539              	.Ldebug_info0:
 540 0000 77020000 		.4byte	0x277
 541 0004 0300     		.2byte	0x3
 542 0006 00000000 		.4byte	.Ldebug_abbrev0
 543 000a 04       		.byte	0x4
 544 000b 01       		.uleb128 0x1
 545 000c 46000000 		.4byte	.LASF34
 546 0010 0C       		.byte	0xc
 547 0011 0C020000 		.4byte	.LASF35
 548 0015 6D010000 		.4byte	.LASF36
 549 0019 00000000 		.4byte	.Ldebug_ranges0+0
 550 001d 00000000 		.4byte	0
 551 0021 00000000 		.4byte	0
 552 0025 00000000 		.4byte	.Ldebug_line0
 553 0029 02       		.uleb128 0x2
 554 002a 01       		.byte	0x1
 555 002b 06       		.byte	0x6
 556 002c 00030000 		.4byte	.LASF0
 557 0030 02       		.uleb128 0x2
 558 0031 01       		.byte	0x1
 559 0032 08       		.byte	0x8
 560 0033 FC000000 		.4byte	.LASF1
 561 0037 02       		.uleb128 0x2
 562 0038 02       		.byte	0x2
 563 0039 05       		.byte	0x5
 564 003a A7020000 		.4byte	.LASF2
 565 003e 02       		.uleb128 0x2
 566 003f 02       		.byte	0x2
 567 0040 07       		.byte	0x7
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccVxWlfZ.s 			page 18


 568 0041 24030000 		.4byte	.LASF3
 569 0045 02       		.uleb128 0x2
 570 0046 04       		.byte	0x4
 571 0047 05       		.byte	0x5
 572 0048 EB020000 		.4byte	.LASF4
 573 004c 02       		.uleb128 0x2
 574 004d 04       		.byte	0x4
 575 004e 07       		.byte	0x7
 576 004f 31010000 		.4byte	.LASF5
 577 0053 02       		.uleb128 0x2
 578 0054 08       		.byte	0x8
 579 0055 05       		.byte	0x5
 580 0056 7A020000 		.4byte	.LASF6
 581 005a 02       		.uleb128 0x2
 582 005b 08       		.byte	0x8
 583 005c 07       		.byte	0x7
 584 005d F5010000 		.4byte	.LASF7
 585 0061 03       		.uleb128 0x3
 586 0062 04       		.byte	0x4
 587 0063 05       		.byte	0x5
 588 0064 696E7400 		.ascii	"int\000"
 589 0068 02       		.uleb128 0x2
 590 0069 04       		.byte	0x4
 591 006a 07       		.byte	0x7
 592 006b E0010000 		.4byte	.LASF8
 593 006f 04       		.uleb128 0x4
 594 0070 43010000 		.4byte	.LASF9
 595 0074 02       		.byte	0x2
 596 0075 D201     		.2byte	0x1d2
 597 0077 30000000 		.4byte	0x30
 598 007b 04       		.uleb128 0x4
 599 007c C2010000 		.4byte	.LASF10
 600 0080 02       		.byte	0x2
 601 0081 D401     		.2byte	0x1d4
 602 0083 4C000000 		.4byte	0x4c
 603 0087 02       		.uleb128 0x2
 604 0088 04       		.byte	0x4
 605 0089 04       		.byte	0x4
 606 008a DE000000 		.4byte	.LASF11
 607 008e 02       		.uleb128 0x2
 608 008f 08       		.byte	0x8
 609 0090 04       		.byte	0x4
 610 0091 52010000 		.4byte	.LASF12
 611 0095 02       		.uleb128 0x2
 612 0096 01       		.byte	0x1
 613 0097 08       		.byte	0x8
 614 0098 A2020000 		.4byte	.LASF13
 615 009c 04       		.uleb128 0x4
 616 009d 1A000000 		.4byte	.LASF14
 617 00a1 02       		.byte	0x2
 618 00a2 7E02     		.2byte	0x27e
 619 00a4 A8000000 		.4byte	0xa8
 620 00a8 05       		.uleb128 0x5
 621 00a9 7B000000 		.4byte	0x7b
 622 00ad 04       		.uleb128 0x4
 623 00ae 4E020000 		.4byte	.LASF15
 624 00b2 02       		.byte	0x2
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccVxWlfZ.s 			page 19


 625 00b3 8E02     		.2byte	0x28e
 626 00b5 B9000000 		.4byte	0xb9
 627 00b9 06       		.uleb128 0x6
 628 00ba 04       		.byte	0x4
 629 00bb BF000000 		.4byte	0xbf
 630 00bf 07       		.uleb128 0x7
 631 00c0 01       		.byte	0x1
 632 00c1 02       		.uleb128 0x2
 633 00c2 08       		.byte	0x8
 634 00c3 04       		.byte	0x4
 635 00c4 F4020000 		.4byte	.LASF16
 636 00c8 02       		.uleb128 0x2
 637 00c9 04       		.byte	0x4
 638 00ca 07       		.byte	0x7
 639 00cb 5B020000 		.4byte	.LASF17
 640 00cf 08       		.uleb128 0x8
 641 00d0 01       		.byte	0x1
 642 00d1 59010000 		.4byte	.LASF18
 643 00d5 01       		.byte	0x1
 644 00d6 38       		.byte	0x38
 645 00d7 01       		.byte	0x1
 646 00d8 00000000 		.4byte	.LFB2
 647 00dc 24000000 		.4byte	.LFE2
 648 00e0 01       		.byte	0x1
 649 00e1 9C       		.byte	0x9c
 650 00e2 01       		.byte	0x1
 651 00e3 09       		.uleb128 0x9
 652 00e4 01       		.byte	0x1
 653 00e5 64020000 		.4byte	.LASF21
 654 00e9 01       		.byte	0x1
 655 00ea 63       		.byte	0x63
 656 00eb 01       		.byte	0x1
 657 00ec 00000000 		.4byte	.LFB3
 658 00f0 26000000 		.4byte	.LFE3
 659 00f4 01       		.byte	0x1
 660 00f5 9C       		.byte	0x9c
 661 00f6 01       		.byte	0x1
 662 00f7 0A010000 		.4byte	0x10a
 663 00fb 0A       		.uleb128 0xa
 664 00fc ED010000 		.4byte	.LASF23
 665 0100 01       		.byte	0x1
 666 0101 63       		.byte	0x63
 667 0102 AD000000 		.4byte	0xad
 668 0106 02       		.byte	0x2
 669 0107 91       		.byte	0x91
 670 0108 74       		.sleb128 -12
 671 0109 00       		.byte	0
 672 010a 08       		.uleb128 0x8
 673 010b 01       		.byte	0x1
 674 010c 37030000 		.4byte	.LASF19
 675 0110 01       		.byte	0x1
 676 0111 81       		.byte	0x81
 677 0112 01       		.byte	0x1
 678 0113 00000000 		.4byte	.LFB4
 679 0117 1C000000 		.4byte	.LFE4
 680 011b 01       		.byte	0x1
 681 011c 9C       		.byte	0x9c
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccVxWlfZ.s 			page 20


 682 011d 01       		.byte	0x1
 683 011e 0B       		.uleb128 0xb
 684 011f 01       		.byte	0x1
 685 0120 0A010000 		.4byte	.LASF20
 686 0124 01       		.byte	0x1
 687 0125 9F       		.byte	0x9f
 688 0126 01       		.byte	0x1
 689 0127 00000000 		.4byte	.LFB5
 690 012b 0A000000 		.4byte	.LFE5
 691 012f 01       		.byte	0x1
 692 0130 9C       		.byte	0x9c
 693 0131 01       		.byte	0x1
 694 0132 0C       		.uleb128 0xc
 695 0133 01       		.byte	0x1
 696 0134 0C030000 		.4byte	.LASF22
 697 0138 01       		.byte	0x1
 698 0139 C7       		.byte	0xc7
 699 013a 01       		.byte	0x1
 700 013b 00000000 		.4byte	.LFB6
 701 013f 1C000000 		.4byte	.LFE6
 702 0143 01       		.byte	0x1
 703 0144 9C       		.byte	0x9c
 704 0145 01       		.byte	0x1
 705 0146 59010000 		.4byte	0x159
 706 014a 0A       		.uleb128 0xa
 707 014b ED010000 		.4byte	.LASF23
 708 014f 01       		.byte	0x1
 709 0150 C7       		.byte	0xc7
 710 0151 AD000000 		.4byte	0xad
 711 0155 02       		.byte	0x2
 712 0156 91       		.byte	0x91
 713 0157 74       		.sleb128 -12
 714 0158 00       		.byte	0
 715 0159 0D       		.uleb128 0xd
 716 015a 01       		.byte	0x1
 717 015b E4000000 		.4byte	.LASF29
 718 015f 01       		.byte	0x1
 719 0160 DB       		.byte	0xdb
 720 0161 01       		.byte	0x1
 721 0162 AD000000 		.4byte	0xad
 722 0166 00000000 		.4byte	.LFB7
 723 016a 14000000 		.4byte	.LFE7
 724 016e 01       		.byte	0x1
 725 016f 9C       		.byte	0x9c
 726 0170 01       		.byte	0x1
 727 0171 09       		.uleb128 0x9
 728 0172 01       		.byte	0x1
 729 0173 00000000 		.4byte	.LASF24
 730 0177 01       		.byte	0x1
 731 0178 F9       		.byte	0xf9
 732 0179 01       		.byte	0x1
 733 017a 00000000 		.4byte	.LFB8
 734 017e 50000000 		.4byte	.LFE8
 735 0182 01       		.byte	0x1
 736 0183 9C       		.byte	0x9c
 737 0184 01       		.byte	0x1
 738 0185 B4010000 		.4byte	0x1b4
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccVxWlfZ.s 			page 21


 739 0189 0A       		.uleb128 0xa
 740 018a 49010000 		.4byte	.LASF25
 741 018e 01       		.byte	0x1
 742 018f F9       		.byte	0xf9
 743 0190 6F000000 		.4byte	0x6f
 744 0194 02       		.byte	0x2
 745 0195 91       		.byte	0x91
 746 0196 67       		.sleb128 -25
 747 0197 0E       		.uleb128 0xe
 748 0198 22010000 		.4byte	.LASF26
 749 019c 01       		.byte	0x1
 750 019d FB       		.byte	0xfb
 751 019e 6F000000 		.4byte	0x6f
 752 01a2 02       		.byte	0x2
 753 01a3 91       		.byte	0x91
 754 01a4 6B       		.sleb128 -21
 755 01a5 0E       		.uleb128 0xe
 756 01a6 C6020000 		.4byte	.LASF27
 757 01aa 01       		.byte	0x1
 758 01ab FC       		.byte	0xfc
 759 01ac 7B000000 		.4byte	0x7b
 760 01b0 02       		.byte	0x2
 761 01b1 91       		.byte	0x91
 762 01b2 6C       		.sleb128 -20
 763 01b3 00       		.byte	0
 764 01b4 0F       		.uleb128 0xf
 765 01b5 01       		.byte	0x1
 766 01b6 88020000 		.4byte	.LASF37
 767 01ba 01       		.byte	0x1
 768 01bb 1501     		.2byte	0x115
 769 01bd 01       		.byte	0x1
 770 01be 6F000000 		.4byte	0x6f
 771 01c2 00000000 		.4byte	.LFB9
 772 01c6 2C000000 		.4byte	.LFE9
 773 01ca 01       		.byte	0x1
 774 01cb 9C       		.byte	0x9c
 775 01cc 01       		.byte	0x1
 776 01cd F0010000 		.4byte	0x1f0
 777 01d1 10       		.uleb128 0x10
 778 01d2 49010000 		.4byte	.LASF25
 779 01d6 01       		.byte	0x1
 780 01d7 1701     		.2byte	0x117
 781 01d9 7B000000 		.4byte	0x7b
 782 01dd 02       		.byte	0x2
 783 01de 91       		.byte	0x91
 784 01df 70       		.sleb128 -16
 785 01e0 10       		.uleb128 0x10
 786 01e1 C6020000 		.4byte	.LASF27
 787 01e5 01       		.byte	0x1
 788 01e6 1801     		.2byte	0x118
 789 01e8 7B000000 		.4byte	0x7b
 790 01ec 02       		.byte	0x2
 791 01ed 91       		.byte	0x91
 792 01ee 74       		.sleb128 -12
 793 01ef 00       		.byte	0
 794 01f0 11       		.uleb128 0x11
 795 01f1 01       		.byte	0x1
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccVxWlfZ.s 			page 22


 796 01f2 B1020000 		.4byte	.LASF28
 797 01f6 01       		.byte	0x1
 798 01f7 3001     		.2byte	0x130
 799 01f9 01       		.byte	0x1
 800 01fa 00000000 		.4byte	.LFB10
 801 01fe 18000000 		.4byte	.LFE10
 802 0202 01       		.byte	0x1
 803 0203 9C       		.byte	0x9c
 804 0204 01       		.byte	0x1
 805 0205 12       		.uleb128 0x12
 806 0206 01       		.byte	0x1
 807 0207 C9010000 		.4byte	.LASF30
 808 020b 01       		.byte	0x1
 809 020c 4501     		.2byte	0x145
 810 020e 01       		.byte	0x1
 811 020f 6F000000 		.4byte	0x6f
 812 0213 00000000 		.4byte	.LFB11
 813 0217 20000000 		.4byte	.LFE11
 814 021b 01       		.byte	0x1
 815 021c 9C       		.byte	0x9c
 816 021d 01       		.byte	0x1
 817 021e 11       		.uleb128 0x11
 818 021f 01       		.byte	0x1
 819 0220 D5020000 		.4byte	.LASF31
 820 0224 01       		.byte	0x1
 821 0225 5A01     		.2byte	0x15a
 822 0227 01       		.byte	0x1
 823 0228 00000000 		.4byte	.LFB12
 824 022c 18000000 		.4byte	.LFE12
 825 0230 01       		.byte	0x1
 826 0231 9C       		.byte	0x9c
 827 0232 01       		.byte	0x1
 828 0233 11       		.uleb128 0x11
 829 0234 01       		.byte	0x1
 830 0235 2D000000 		.4byte	.LASF32
 831 0239 01       		.byte	0x1
 832 023a 7501     		.2byte	0x175
 833 023c 01       		.byte	0x1
 834 023d 00000000 		.4byte	.LFB13
 835 0241 18000000 		.4byte	.LFE13
 836 0245 01       		.byte	0x1
 837 0246 9C       		.byte	0x9c
 838 0247 01       		.byte	0x1
 839 0248 11       		.uleb128 0x11
 840 0249 01       		.byte	0x1
 841 024a 33020000 		.4byte	.LASF33
 842 024e 01       		.byte	0x1
 843 024f 8E01     		.2byte	0x18e
 844 0251 01       		.byte	0x1
 845 0252 00000000 		.4byte	.LFB14
 846 0256 18000000 		.4byte	.LFE14
 847 025a 01       		.byte	0x1
 848 025b 9C       		.byte	0x9c
 849 025c 01       		.byte	0x1
 850 025d 13       		.uleb128 0x13
 851 025e AD000000 		.4byte	0xad
 852 0262 6D020000 		.4byte	0x26d
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccVxWlfZ.s 			page 23


 853 0266 14       		.uleb128 0x14
 854 0267 C8000000 		.4byte	0xc8
 855 026b 2F       		.byte	0x2f
 856 026c 00       		.byte	0
 857 026d 15       		.uleb128 0x15
 858 026e 20000000 		.4byte	.LASF38
 859 0272 01       		.byte	0x1
 860 0273 21       		.byte	0x21
 861 0274 5D020000 		.4byte	0x25d
 862 0278 01       		.byte	0x1
 863 0279 01       		.byte	0x1
 864 027a 00       		.byte	0
 865              		.section	.debug_abbrev,"",%progbits
 866              	.Ldebug_abbrev0:
 867 0000 01       		.uleb128 0x1
 868 0001 11       		.uleb128 0x11
 869 0002 01       		.byte	0x1
 870 0003 25       		.uleb128 0x25
 871 0004 0E       		.uleb128 0xe
 872 0005 13       		.uleb128 0x13
 873 0006 0B       		.uleb128 0xb
 874 0007 03       		.uleb128 0x3
 875 0008 0E       		.uleb128 0xe
 876 0009 1B       		.uleb128 0x1b
 877 000a 0E       		.uleb128 0xe
 878 000b 55       		.uleb128 0x55
 879 000c 06       		.uleb128 0x6
 880 000d 11       		.uleb128 0x11
 881 000e 01       		.uleb128 0x1
 882 000f 52       		.uleb128 0x52
 883 0010 01       		.uleb128 0x1
 884 0011 10       		.uleb128 0x10
 885 0012 06       		.uleb128 0x6
 886 0013 00       		.byte	0
 887 0014 00       		.byte	0
 888 0015 02       		.uleb128 0x2
 889 0016 24       		.uleb128 0x24
 890 0017 00       		.byte	0
 891 0018 0B       		.uleb128 0xb
 892 0019 0B       		.uleb128 0xb
 893 001a 3E       		.uleb128 0x3e
 894 001b 0B       		.uleb128 0xb
 895 001c 03       		.uleb128 0x3
 896 001d 0E       		.uleb128 0xe
 897 001e 00       		.byte	0
 898 001f 00       		.byte	0
 899 0020 03       		.uleb128 0x3
 900 0021 24       		.uleb128 0x24
 901 0022 00       		.byte	0
 902 0023 0B       		.uleb128 0xb
 903 0024 0B       		.uleb128 0xb
 904 0025 3E       		.uleb128 0x3e
 905 0026 0B       		.uleb128 0xb
 906 0027 03       		.uleb128 0x3
 907 0028 08       		.uleb128 0x8
 908 0029 00       		.byte	0
 909 002a 00       		.byte	0
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccVxWlfZ.s 			page 24


 910 002b 04       		.uleb128 0x4
 911 002c 16       		.uleb128 0x16
 912 002d 00       		.byte	0
 913 002e 03       		.uleb128 0x3
 914 002f 0E       		.uleb128 0xe
 915 0030 3A       		.uleb128 0x3a
 916 0031 0B       		.uleb128 0xb
 917 0032 3B       		.uleb128 0x3b
 918 0033 05       		.uleb128 0x5
 919 0034 49       		.uleb128 0x49
 920 0035 13       		.uleb128 0x13
 921 0036 00       		.byte	0
 922 0037 00       		.byte	0
 923 0038 05       		.uleb128 0x5
 924 0039 35       		.uleb128 0x35
 925 003a 00       		.byte	0
 926 003b 49       		.uleb128 0x49
 927 003c 13       		.uleb128 0x13
 928 003d 00       		.byte	0
 929 003e 00       		.byte	0
 930 003f 06       		.uleb128 0x6
 931 0040 0F       		.uleb128 0xf
 932 0041 00       		.byte	0
 933 0042 0B       		.uleb128 0xb
 934 0043 0B       		.uleb128 0xb
 935 0044 49       		.uleb128 0x49
 936 0045 13       		.uleb128 0x13
 937 0046 00       		.byte	0
 938 0047 00       		.byte	0
 939 0048 07       		.uleb128 0x7
 940 0049 15       		.uleb128 0x15
 941 004a 00       		.byte	0
 942 004b 27       		.uleb128 0x27
 943 004c 0C       		.uleb128 0xc
 944 004d 00       		.byte	0
 945 004e 00       		.byte	0
 946 004f 08       		.uleb128 0x8
 947 0050 2E       		.uleb128 0x2e
 948 0051 00       		.byte	0
 949 0052 3F       		.uleb128 0x3f
 950 0053 0C       		.uleb128 0xc
 951 0054 03       		.uleb128 0x3
 952 0055 0E       		.uleb128 0xe
 953 0056 3A       		.uleb128 0x3a
 954 0057 0B       		.uleb128 0xb
 955 0058 3B       		.uleb128 0x3b
 956 0059 0B       		.uleb128 0xb
 957 005a 27       		.uleb128 0x27
 958 005b 0C       		.uleb128 0xc
 959 005c 11       		.uleb128 0x11
 960 005d 01       		.uleb128 0x1
 961 005e 12       		.uleb128 0x12
 962 005f 01       		.uleb128 0x1
 963 0060 40       		.uleb128 0x40
 964 0061 0A       		.uleb128 0xa
 965 0062 9642     		.uleb128 0x2116
 966 0064 0C       		.uleb128 0xc
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccVxWlfZ.s 			page 25


 967 0065 00       		.byte	0
 968 0066 00       		.byte	0
 969 0067 09       		.uleb128 0x9
 970 0068 2E       		.uleb128 0x2e
 971 0069 01       		.byte	0x1
 972 006a 3F       		.uleb128 0x3f
 973 006b 0C       		.uleb128 0xc
 974 006c 03       		.uleb128 0x3
 975 006d 0E       		.uleb128 0xe
 976 006e 3A       		.uleb128 0x3a
 977 006f 0B       		.uleb128 0xb
 978 0070 3B       		.uleb128 0x3b
 979 0071 0B       		.uleb128 0xb
 980 0072 27       		.uleb128 0x27
 981 0073 0C       		.uleb128 0xc
 982 0074 11       		.uleb128 0x11
 983 0075 01       		.uleb128 0x1
 984 0076 12       		.uleb128 0x12
 985 0077 01       		.uleb128 0x1
 986 0078 40       		.uleb128 0x40
 987 0079 0A       		.uleb128 0xa
 988 007a 9642     		.uleb128 0x2116
 989 007c 0C       		.uleb128 0xc
 990 007d 01       		.uleb128 0x1
 991 007e 13       		.uleb128 0x13
 992 007f 00       		.byte	0
 993 0080 00       		.byte	0
 994 0081 0A       		.uleb128 0xa
 995 0082 05       		.uleb128 0x5
 996 0083 00       		.byte	0
 997 0084 03       		.uleb128 0x3
 998 0085 0E       		.uleb128 0xe
 999 0086 3A       		.uleb128 0x3a
 1000 0087 0B       		.uleb128 0xb
 1001 0088 3B       		.uleb128 0x3b
 1002 0089 0B       		.uleb128 0xb
 1003 008a 49       		.uleb128 0x49
 1004 008b 13       		.uleb128 0x13
 1005 008c 02       		.uleb128 0x2
 1006 008d 0A       		.uleb128 0xa
 1007 008e 00       		.byte	0
 1008 008f 00       		.byte	0
 1009 0090 0B       		.uleb128 0xb
 1010 0091 2E       		.uleb128 0x2e
 1011 0092 00       		.byte	0
 1012 0093 3F       		.uleb128 0x3f
 1013 0094 0C       		.uleb128 0xc
 1014 0095 03       		.uleb128 0x3
 1015 0096 0E       		.uleb128 0xe
 1016 0097 3A       		.uleb128 0x3a
 1017 0098 0B       		.uleb128 0xb
 1018 0099 3B       		.uleb128 0x3b
 1019 009a 0B       		.uleb128 0xb
 1020 009b 27       		.uleb128 0x27
 1021 009c 0C       		.uleb128 0xc
 1022 009d 11       		.uleb128 0x11
 1023 009e 01       		.uleb128 0x1
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccVxWlfZ.s 			page 26


 1024 009f 12       		.uleb128 0x12
 1025 00a0 01       		.uleb128 0x1
 1026 00a1 40       		.uleb128 0x40
 1027 00a2 0A       		.uleb128 0xa
 1028 00a3 9742     		.uleb128 0x2117
 1029 00a5 0C       		.uleb128 0xc
 1030 00a6 00       		.byte	0
 1031 00a7 00       		.byte	0
 1032 00a8 0C       		.uleb128 0xc
 1033 00a9 2E       		.uleb128 0x2e
 1034 00aa 01       		.byte	0x1
 1035 00ab 3F       		.uleb128 0x3f
 1036 00ac 0C       		.uleb128 0xc
 1037 00ad 03       		.uleb128 0x3
 1038 00ae 0E       		.uleb128 0xe
 1039 00af 3A       		.uleb128 0x3a
 1040 00b0 0B       		.uleb128 0xb
 1041 00b1 3B       		.uleb128 0x3b
 1042 00b2 0B       		.uleb128 0xb
 1043 00b3 27       		.uleb128 0x27
 1044 00b4 0C       		.uleb128 0xc
 1045 00b5 11       		.uleb128 0x11
 1046 00b6 01       		.uleb128 0x1
 1047 00b7 12       		.uleb128 0x12
 1048 00b8 01       		.uleb128 0x1
 1049 00b9 40       		.uleb128 0x40
 1050 00ba 0A       		.uleb128 0xa
 1051 00bb 9742     		.uleb128 0x2117
 1052 00bd 0C       		.uleb128 0xc
 1053 00be 01       		.uleb128 0x1
 1054 00bf 13       		.uleb128 0x13
 1055 00c0 00       		.byte	0
 1056 00c1 00       		.byte	0
 1057 00c2 0D       		.uleb128 0xd
 1058 00c3 2E       		.uleb128 0x2e
 1059 00c4 00       		.byte	0
 1060 00c5 3F       		.uleb128 0x3f
 1061 00c6 0C       		.uleb128 0xc
 1062 00c7 03       		.uleb128 0x3
 1063 00c8 0E       		.uleb128 0xe
 1064 00c9 3A       		.uleb128 0x3a
 1065 00ca 0B       		.uleb128 0xb
 1066 00cb 3B       		.uleb128 0x3b
 1067 00cc 0B       		.uleb128 0xb
 1068 00cd 27       		.uleb128 0x27
 1069 00ce 0C       		.uleb128 0xc
 1070 00cf 49       		.uleb128 0x49
 1071 00d0 13       		.uleb128 0x13
 1072 00d1 11       		.uleb128 0x11
 1073 00d2 01       		.uleb128 0x1
 1074 00d3 12       		.uleb128 0x12
 1075 00d4 01       		.uleb128 0x1
 1076 00d5 40       		.uleb128 0x40
 1077 00d6 0A       		.uleb128 0xa
 1078 00d7 9742     		.uleb128 0x2117
 1079 00d9 0C       		.uleb128 0xc
 1080 00da 00       		.byte	0
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccVxWlfZ.s 			page 27


 1081 00db 00       		.byte	0
 1082 00dc 0E       		.uleb128 0xe
 1083 00dd 34       		.uleb128 0x34
 1084 00de 00       		.byte	0
 1085 00df 03       		.uleb128 0x3
 1086 00e0 0E       		.uleb128 0xe
 1087 00e1 3A       		.uleb128 0x3a
 1088 00e2 0B       		.uleb128 0xb
 1089 00e3 3B       		.uleb128 0x3b
 1090 00e4 0B       		.uleb128 0xb
 1091 00e5 49       		.uleb128 0x49
 1092 00e6 13       		.uleb128 0x13
 1093 00e7 02       		.uleb128 0x2
 1094 00e8 0A       		.uleb128 0xa
 1095 00e9 00       		.byte	0
 1096 00ea 00       		.byte	0
 1097 00eb 0F       		.uleb128 0xf
 1098 00ec 2E       		.uleb128 0x2e
 1099 00ed 01       		.byte	0x1
 1100 00ee 3F       		.uleb128 0x3f
 1101 00ef 0C       		.uleb128 0xc
 1102 00f0 03       		.uleb128 0x3
 1103 00f1 0E       		.uleb128 0xe
 1104 00f2 3A       		.uleb128 0x3a
 1105 00f3 0B       		.uleb128 0xb
 1106 00f4 3B       		.uleb128 0x3b
 1107 00f5 05       		.uleb128 0x5
 1108 00f6 27       		.uleb128 0x27
 1109 00f7 0C       		.uleb128 0xc
 1110 00f8 49       		.uleb128 0x49
 1111 00f9 13       		.uleb128 0x13
 1112 00fa 11       		.uleb128 0x11
 1113 00fb 01       		.uleb128 0x1
 1114 00fc 12       		.uleb128 0x12
 1115 00fd 01       		.uleb128 0x1
 1116 00fe 40       		.uleb128 0x40
 1117 00ff 0A       		.uleb128 0xa
 1118 0100 9742     		.uleb128 0x2117
 1119 0102 0C       		.uleb128 0xc
 1120 0103 01       		.uleb128 0x1
 1121 0104 13       		.uleb128 0x13
 1122 0105 00       		.byte	0
 1123 0106 00       		.byte	0
 1124 0107 10       		.uleb128 0x10
 1125 0108 34       		.uleb128 0x34
 1126 0109 00       		.byte	0
 1127 010a 03       		.uleb128 0x3
 1128 010b 0E       		.uleb128 0xe
 1129 010c 3A       		.uleb128 0x3a
 1130 010d 0B       		.uleb128 0xb
 1131 010e 3B       		.uleb128 0x3b
 1132 010f 05       		.uleb128 0x5
 1133 0110 49       		.uleb128 0x49
 1134 0111 13       		.uleb128 0x13
 1135 0112 02       		.uleb128 0x2
 1136 0113 0A       		.uleb128 0xa
 1137 0114 00       		.byte	0
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccVxWlfZ.s 			page 28


 1138 0115 00       		.byte	0
 1139 0116 11       		.uleb128 0x11
 1140 0117 2E       		.uleb128 0x2e
 1141 0118 00       		.byte	0
 1142 0119 3F       		.uleb128 0x3f
 1143 011a 0C       		.uleb128 0xc
 1144 011b 03       		.uleb128 0x3
 1145 011c 0E       		.uleb128 0xe
 1146 011d 3A       		.uleb128 0x3a
 1147 011e 0B       		.uleb128 0xb
 1148 011f 3B       		.uleb128 0x3b
 1149 0120 05       		.uleb128 0x5
 1150 0121 27       		.uleb128 0x27
 1151 0122 0C       		.uleb128 0xc
 1152 0123 11       		.uleb128 0x11
 1153 0124 01       		.uleb128 0x1
 1154 0125 12       		.uleb128 0x12
 1155 0126 01       		.uleb128 0x1
 1156 0127 40       		.uleb128 0x40
 1157 0128 0A       		.uleb128 0xa
 1158 0129 9742     		.uleb128 0x2117
 1159 012b 0C       		.uleb128 0xc
 1160 012c 00       		.byte	0
 1161 012d 00       		.byte	0
 1162 012e 12       		.uleb128 0x12
 1163 012f 2E       		.uleb128 0x2e
 1164 0130 00       		.byte	0
 1165 0131 3F       		.uleb128 0x3f
 1166 0132 0C       		.uleb128 0xc
 1167 0133 03       		.uleb128 0x3
 1168 0134 0E       		.uleb128 0xe
 1169 0135 3A       		.uleb128 0x3a
 1170 0136 0B       		.uleb128 0xb
 1171 0137 3B       		.uleb128 0x3b
 1172 0138 05       		.uleb128 0x5
 1173 0139 27       		.uleb128 0x27
 1174 013a 0C       		.uleb128 0xc
 1175 013b 49       		.uleb128 0x49
 1176 013c 13       		.uleb128 0x13
 1177 013d 11       		.uleb128 0x11
 1178 013e 01       		.uleb128 0x1
 1179 013f 12       		.uleb128 0x12
 1180 0140 01       		.uleb128 0x1
 1181 0141 40       		.uleb128 0x40
 1182 0142 0A       		.uleb128 0xa
 1183 0143 9742     		.uleb128 0x2117
 1184 0145 0C       		.uleb128 0xc
 1185 0146 00       		.byte	0
 1186 0147 00       		.byte	0
 1187 0148 13       		.uleb128 0x13
 1188 0149 01       		.uleb128 0x1
 1189 014a 01       		.byte	0x1
 1190 014b 49       		.uleb128 0x49
 1191 014c 13       		.uleb128 0x13
 1192 014d 01       		.uleb128 0x1
 1193 014e 13       		.uleb128 0x13
 1194 014f 00       		.byte	0
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccVxWlfZ.s 			page 29


 1195 0150 00       		.byte	0
 1196 0151 14       		.uleb128 0x14
 1197 0152 21       		.uleb128 0x21
 1198 0153 00       		.byte	0
 1199 0154 49       		.uleb128 0x49
 1200 0155 13       		.uleb128 0x13
 1201 0156 2F       		.uleb128 0x2f
 1202 0157 0B       		.uleb128 0xb
 1203 0158 00       		.byte	0
 1204 0159 00       		.byte	0
 1205 015a 15       		.uleb128 0x15
 1206 015b 34       		.uleb128 0x34
 1207 015c 00       		.byte	0
 1208 015d 03       		.uleb128 0x3
 1209 015e 0E       		.uleb128 0xe
 1210 015f 3A       		.uleb128 0x3a
 1211 0160 0B       		.uleb128 0xb
 1212 0161 3B       		.uleb128 0x3b
 1213 0162 0B       		.uleb128 0xb
 1214 0163 49       		.uleb128 0x49
 1215 0164 13       		.uleb128 0x13
 1216 0165 3F       		.uleb128 0x3f
 1217 0166 0C       		.uleb128 0xc
 1218 0167 3C       		.uleb128 0x3c
 1219 0168 0C       		.uleb128 0xc
 1220 0169 00       		.byte	0
 1221 016a 00       		.byte	0
 1222 016b 00       		.byte	0
 1223              		.section	.debug_aranges,"",%progbits
 1224 0000 7C000000 		.4byte	0x7c
 1225 0004 0200     		.2byte	0x2
 1226 0006 00000000 		.4byte	.Ldebug_info0
 1227 000a 04       		.byte	0x4
 1228 000b 00       		.byte	0
 1229 000c 0000     		.2byte	0
 1230 000e 0000     		.2byte	0
 1231 0010 00000000 		.4byte	.LFB2
 1232 0014 24000000 		.4byte	.LFE2-.LFB2
 1233 0018 00000000 		.4byte	.LFB3
 1234 001c 26000000 		.4byte	.LFE3-.LFB3
 1235 0020 00000000 		.4byte	.LFB4
 1236 0024 1C000000 		.4byte	.LFE4-.LFB4
 1237 0028 00000000 		.4byte	.LFB5
 1238 002c 0A000000 		.4byte	.LFE5-.LFB5
 1239 0030 00000000 		.4byte	.LFB6
 1240 0034 1C000000 		.4byte	.LFE6-.LFB6
 1241 0038 00000000 		.4byte	.LFB7
 1242 003c 14000000 		.4byte	.LFE7-.LFB7
 1243 0040 00000000 		.4byte	.LFB8
 1244 0044 50000000 		.4byte	.LFE8-.LFB8
 1245 0048 00000000 		.4byte	.LFB9
 1246 004c 2C000000 		.4byte	.LFE9-.LFB9
 1247 0050 00000000 		.4byte	.LFB10
 1248 0054 18000000 		.4byte	.LFE10-.LFB10
 1249 0058 00000000 		.4byte	.LFB11
 1250 005c 20000000 		.4byte	.LFE11-.LFB11
 1251 0060 00000000 		.4byte	.LFB12
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccVxWlfZ.s 			page 30


 1252 0064 18000000 		.4byte	.LFE12-.LFB12
 1253 0068 00000000 		.4byte	.LFB13
 1254 006c 18000000 		.4byte	.LFE13-.LFB13
 1255 0070 00000000 		.4byte	.LFB14
 1256 0074 18000000 		.4byte	.LFE14-.LFB14
 1257 0078 00000000 		.4byte	0
 1258 007c 00000000 		.4byte	0
 1259              		.section	.debug_ranges,"",%progbits
 1260              	.Ldebug_ranges0:
 1261 0000 00000000 		.4byte	.LFB2
 1262 0004 24000000 		.4byte	.LFE2
 1263 0008 00000000 		.4byte	.LFB3
 1264 000c 26000000 		.4byte	.LFE3
 1265 0010 00000000 		.4byte	.LFB4
 1266 0014 1C000000 		.4byte	.LFE4
 1267 0018 00000000 		.4byte	.LFB5
 1268 001c 0A000000 		.4byte	.LFE5
 1269 0020 00000000 		.4byte	.LFB6
 1270 0024 1C000000 		.4byte	.LFE6
 1271 0028 00000000 		.4byte	.LFB7
 1272 002c 14000000 		.4byte	.LFE7
 1273 0030 00000000 		.4byte	.LFB8
 1274 0034 50000000 		.4byte	.LFE8
 1275 0038 00000000 		.4byte	.LFB9
 1276 003c 2C000000 		.4byte	.LFE9
 1277 0040 00000000 		.4byte	.LFB10
 1278 0044 18000000 		.4byte	.LFE10
 1279 0048 00000000 		.4byte	.LFB11
 1280 004c 20000000 		.4byte	.LFE11
 1281 0050 00000000 		.4byte	.LFB12
 1282 0054 18000000 		.4byte	.LFE12
 1283 0058 00000000 		.4byte	.LFB13
 1284 005c 18000000 		.4byte	.LFE13
 1285 0060 00000000 		.4byte	.LFB14
 1286 0064 18000000 		.4byte	.LFE14
 1287 0068 00000000 		.4byte	0
 1288 006c 00000000 		.4byte	0
 1289              		.section	.debug_line,"",%progbits
 1290              	.Ldebug_line0:
 1291 0000 58010000 		.section	.debug_str,"MS",%progbits,1
 1291      02004A00 
 1291      00000201 
 1291      FB0E0D00 
 1291      01010101 
 1292              	.LASF24:
 1293 0000 424C455F 		.ascii	"BLE_bless_isr_SetPriority\000"
 1293      626C6573 
 1293      735F6973 
 1293      725F5365 
 1293      74507269 
 1294              	.LASF14:
 1295 001a 72656733 		.ascii	"reg32\000"
 1295      3200
 1296              	.LASF38:
 1297 0020 43795261 		.ascii	"CyRamVectors\000"
 1297      6D566563 
 1297      746F7273 
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccVxWlfZ.s 			page 31


 1297      00
 1298              	.LASF32:
 1299 002d 424C455F 		.ascii	"BLE_bless_isr_SetPending\000"
 1299      626C6573 
 1299      735F6973 
 1299      725F5365 
 1299      7450656E 
 1300              	.LASF34:
 1301 0046 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1301      43313120 
 1301      352E342E 
 1301      31203230 
 1301      31363036 
 1302 0079 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -g"
 1302      20726576 
 1302      6973696F 
 1302      6E203233 
 1302      37373135 
 1303 00ac 64776172 		.ascii	"dwarf-3 -O0 -ffunction-sections -ffat-lto-objects\000"
 1303      662D3320 
 1303      2D4F3020 
 1303      2D666675 
 1303      6E637469 
 1304              	.LASF11:
 1305 00de 666C6F61 		.ascii	"float\000"
 1305      7400
 1306              	.LASF29:
 1307 00e4 424C455F 		.ascii	"BLE_bless_isr_GetVector\000"
 1307      626C6573 
 1307      735F6973 
 1307      725F4765 
 1307      74566563 
 1308              	.LASF1:
 1309 00fc 756E7369 		.ascii	"unsigned char\000"
 1309      676E6564 
 1309      20636861 
 1309      7200
 1310              	.LASF20:
 1311 010a 424C455F 		.ascii	"BLE_bless_isr_Interrupt\000"
 1311      626C6573 
 1311      735F6973 
 1311      725F496E 
 1311      74657272 
 1312              	.LASF26:
 1313 0122 696E7465 		.ascii	"interruptState\000"
 1313      72727570 
 1313      74537461 
 1313      746500
 1314              	.LASF5:
 1315 0131 6C6F6E67 		.ascii	"long unsigned int\000"
 1315      20756E73 
 1315      69676E65 
 1315      6420696E 
 1315      7400
 1316              	.LASF9:
 1317 0143 75696E74 		.ascii	"uint8\000"
 1317      3800
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccVxWlfZ.s 			page 32


 1318              	.LASF25:
 1319 0149 7072696F 		.ascii	"priority\000"
 1319      72697479 
 1319      00
 1320              	.LASF12:
 1321 0152 646F7562 		.ascii	"double\000"
 1321      6C6500
 1322              	.LASF18:
 1323 0159 424C455F 		.ascii	"BLE_bless_isr_Start\000"
 1323      626C6573 
 1323      735F6973 
 1323      725F5374 
 1323      61727400 
 1324              	.LASF36:
 1325 016d 433A5C55 		.ascii	"C:\\Users\\hasur\\Documents\\PSoC_4_BLE_Pressure_Se"
 1325      73657273 
 1325      5C686173 
 1325      75725C44 
 1325      6F63756D 
 1326 019c 6E736F72 		.ascii	"nsor\\PSoC_4_BLE_Pressure_Sensor.cydsn\000"
 1326      5C50536F 
 1326      435F345F 
 1326      424C455F 
 1326      50726573 
 1327              	.LASF10:
 1328 01c2 75696E74 		.ascii	"uint32\000"
 1328      333200
 1329              	.LASF30:
 1330 01c9 424C455F 		.ascii	"BLE_bless_isr_GetState\000"
 1330      626C6573 
 1330      735F6973 
 1330      725F4765 
 1330      74537461 
 1331              	.LASF8:
 1332 01e0 756E7369 		.ascii	"unsigned int\000"
 1332      676E6564 
 1332      20696E74 
 1332      00
 1333              	.LASF23:
 1334 01ed 61646472 		.ascii	"address\000"
 1334      65737300 
 1335              	.LASF7:
 1336 01f5 6C6F6E67 		.ascii	"long long unsigned int\000"
 1336      206C6F6E 
 1336      6720756E 
 1336      7369676E 
 1336      65642069 
 1337              	.LASF35:
 1338 020c 47656E65 		.ascii	"Generated_Source\\PSoC4\\BLE_bless_isr.c\000"
 1338      72617465 
 1338      645F536F 
 1338      75726365 
 1338      5C50536F 
 1339              	.LASF33:
 1340 0233 424C455F 		.ascii	"BLE_bless_isr_ClearPending\000"
 1340      626C6573 
 1340      735F6973 
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccVxWlfZ.s 			page 33


 1340      725F436C 
 1340      65617250 
 1341              	.LASF15:
 1342 024e 63796973 		.ascii	"cyisraddress\000"
 1342      72616464 
 1342      72657373 
 1342      00
 1343              	.LASF17:
 1344 025b 73697A65 		.ascii	"sizetype\000"
 1344      74797065 
 1344      00
 1345              	.LASF21:
 1346 0264 424C455F 		.ascii	"BLE_bless_isr_StartEx\000"
 1346      626C6573 
 1346      735F6973 
 1346      725F5374 
 1346      61727445 
 1347              	.LASF6:
 1348 027a 6C6F6E67 		.ascii	"long long int\000"
 1348      206C6F6E 
 1348      6720696E 
 1348      7400
 1349              	.LASF37:
 1350 0288 424C455F 		.ascii	"BLE_bless_isr_GetPriority\000"
 1350      626C6573 
 1350      735F6973 
 1350      725F4765 
 1350      74507269 
 1351              	.LASF13:
 1352 02a2 63686172 		.ascii	"char\000"
 1352      00
 1353              	.LASF2:
 1354 02a7 73686F72 		.ascii	"short int\000"
 1354      7420696E 
 1354      7400
 1355              	.LASF28:
 1356 02b1 424C455F 		.ascii	"BLE_bless_isr_Enable\000"
 1356      626C6573 
 1356      735F6973 
 1356      725F456E 
 1356      61626C65 
 1357              	.LASF27:
 1358 02c6 7072696F 		.ascii	"priorityOffset\000"
 1358      72697479 
 1358      4F666673 
 1358      657400
 1359              	.LASF31:
 1360 02d5 424C455F 		.ascii	"BLE_bless_isr_Disable\000"
 1360      626C6573 
 1360      735F6973 
 1360      725F4469 
 1360      7361626C 
 1361              	.LASF4:
 1362 02eb 6C6F6E67 		.ascii	"long int\000"
 1362      20696E74 
 1362      00
 1363              	.LASF16:
ARM GAS  C:\Users\hasur\AppData\Local\Temp\ccVxWlfZ.s 			page 34


 1364 02f4 6C6F6E67 		.ascii	"long double\000"
 1364      20646F75 
 1364      626C6500 
 1365              	.LASF0:
 1366 0300 7369676E 		.ascii	"signed char\000"
 1366      65642063 
 1366      68617200 
 1367              	.LASF22:
 1368 030c 424C455F 		.ascii	"BLE_bless_isr_SetVector\000"
 1368      626C6573 
 1368      735F6973 
 1368      725F5365 
 1368      74566563 
 1369              	.LASF3:
 1370 0324 73686F72 		.ascii	"short unsigned int\000"
 1370      7420756E 
 1370      7369676E 
 1370      65642069 
 1370      6E7400
 1371              	.LASF19:
 1372 0337 424C455F 		.ascii	"BLE_bless_isr_Stop\000"
 1372      626C6573 
 1372      735F6973 
 1372      725F5374 
 1372      6F7000
 1373              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
